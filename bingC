
hotdog
	-label ""
	-annotation "X"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//def\n//GraphEditorLockChannel;>h\n//GraphEditorUnlockChannel;>j\n//GoToMaxFrame;>sa c\n//GoToMinFrame;>sa v\n//IncrementAndSave;ca s 増分して保存\n\n//need set\n//RegionKeysTool;>ca x\n//LatticeDeformKeysTool;>as x\n//RetimeKeysTool;>cas x\n//RemoveInbetween;>F5\n//AddInbetween;>F6\n//SetKeyAnimated;>he bing")
	O_point;

hotdog
	-label ""
	-annotation "ins"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//EnterEditMode\n//dR_DoCmd(\"customPivotTool\")\n\nif(`keyframe -an keys -q -kc`!=0){\nstring $allWindows[] = `lsUI -windows`;\nstring $toolWindows[] = {};\nfor ($win in $allWindows) {\n    if ($win != \"MayaWindow\" && $win != \"scriptEditorPanel1Window\" && `window -exists $win` && `window -q -visible $win`) {\n        $toolWindows[size($toolWindows)] = $win;\n    }//print ($win+\"\\n\");\n}\nfor ($win in $toolWindows) {\n    if (`window -exists $win`) {\n        window -e -visible false $win;\n    }\n}\njiuci;\nfor ($win in $toolWindows) {\n    if (`window -exists $win`) {\n        window -e -visible true $win;\n    }\n}\n}")
	C_ins1;

hotdog
	-label ""
	-annotation "a ins"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("")
	C_ins2;

hotdog
	-label ""
	-annotation "ca ins"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keywork2024(){////sel key zheng he shuzhi\nglobal float $FrameB;\nglobal float $keyshuzhi[];\nglobal int $keyjige;son;\nkeyframe -animation keys -absolute -valueChange $keyshuzhi[$keyjige-1];\nprint \"duiqi last key shuzhi\";\n}keywork2024;")
	C_ins3;

hotdog
	-label ""
	-annotation "home"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//LarmRigsel\n\nif(`keyframe -an keys -q -kc`!=0){baciA;}//<<csq>>*8")
	C_home1;

hotdog
	-label ""
	-annotation "a home"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("allarmRigsel")
	C_home2;

hotdog
	-label ""
	-annotation "ca home"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){staggerwork;\n}else{\nautocvA(1);//sel key順番\nprint \"+all+ [oL]\\n\";\n}\n//\nglobal proc staggerwork(){\nif (`window -exists staggerKeyUI`)deleteUI staggerKeyUI;\n\twindow -toolbox 1 -width 180 -t \"staggerKey\" -mxb 0 -mnb 0 staggerKeyUI;\n\tcolumnLayout -adj 1 -rowSpacing 1 -columnWidth 180 mainCol;\n\trowColumnLayout -numberOfColumns 9;\n\tbutton -l \"CV\" -c staggercv staggerButton;  \n\tfloat $staggerFrame = 1;\n\tfloatField  -minValue -99 -maxValue 99 -pre 1 -value $staggerFrame frameVal;\n\tbutton -l \"KEY\" -c staggerkey;\nsetParent ..;\nrowLayout -nc 4;\nbutton -l \"autocv+\" -c \"autocvA(1)\" -ann \"C+A+Home\";\nbutton -l \"autocv-\" -c \"autocvA(-1)\" -ann \"C+A+PgUp\";\nbutton -l \"half+\" -c \"halfautocv(0)\" -ann \"C+A+End\";\nbutton -l \"half-\" -c \"halfautocv(1)\" -ann \"C+A+PgDown\";\nsetParent ..;\n\tshowWindow staggerKeyUI;\n}staggerwork;\n// 選択されたオブジェクトの順番\nglobal proc staggerkey(){\nstring $selection[] = `ls -sl`;\nint $count = size($selection);int $h;\nfor ($i = 0; $i < $count; $i++) {\n    string $obj = $selection[$i];\n    // 接続されているアニメーションカーブを取得\n    string $animCurves[] = `listConnections -type animCurve $obj`;\n    for ($curve in $animCurves) {\n        // 選択されているキーの時間を取得\n        float $selectedKeys[] = `keyframe -q -selected -timeChange $curve`;\n        // 選択されているキーの値を取得\n        float $selectedValues[] = `keyframe -q -selected -valueChange $curve`;\n        for ($j = 0; $j < size($selectedKeys); $j++) {\n            float $skipVal = `floatField -query -value frameVal`;\n\t        if($selectedValues[0]<0){$h=-1;}else{$h=1;}//\n\t        float $staggerVal = ($skipVal*$i*$h+$selectedValues[0]);\n            keyframe -e -time $selectedKeys[$j] -valueChange $staggerVal $curve;\n        }\n    }\n}\n}\n//\nglobal proc staggercv(){\nfloat $skipVal = `floatField -query -value frameVal`;\nstring $selectedCurves[] = `keyframe -q -name`;\n    for ($i = 0; $i < size($selectedCurves); $i++){\n        keyframe -edit -relative -timeChange ($i*$skipVal) $selectedCurves[$i];\n    }\n}\n\n//\nglobal proc autocvA(float $bianshu){\nstring $selectedCurves[] = `keyframe -selected -q -name`;\nfor ($c=1;$c<size($selectedCurves);$c++){\n\t$channel = $selectedCurves[$c];\n\t$channel2 = $selectedCurves[0];\n\t$timeArray2 = `keyframe -selected -q -valueChange $channel2`; \n\t$timeArray = `keyframe -selected -q -valueChange $channel`; \n\t$selected = `keyframe -selected -q -indexValue $channel`;\n\tkeyframe -relative -index $selected[0] -valueChange ($timeArray2[0]*$c*0.1*$bianshu) $channel;\n\t}\n}//autocvA(1)\n//////\nglobal proc halfautocv(int $OI){\nglobal int $notime;\nglobal string $selcurves[];\nglobal int $keyjige;son;\nfor ($x=0;$x<$keyjige/2-1;$x++){\nselectKey -tgl -k -t $notime $selcurves[$x] ;\n}\nif($OI==0){autocvA(1);autocvA(1);}\nelse if($OI==1){autocvA(-1);autocvA(-1);}\nselectKey -k -t $notime $selcurves;\n}//halfautocv(1)")
	C_home3;

hotdog
	-label ""
	-annotation "pgup"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//RarmRigsel\nif(`keyframe -an keys -q -kc`!=0){baciB;}//>>csq<<*8")
	C_pgup1;

hotdog
	-label ""
	-annotation "a pgup"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("")
	C_pgup2;

hotdog
	-label ""
	-annotation "ca pgup"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("autocvA(-1);\nprint \"-all-\";")
	C_pgup3;

hotdog
	-label ""
	-annotation "end"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc refarensSel(){\nglobal string $selAAAB[];\nglobal string $selnew[];\nstring $selAAAB[]=`ls-sl`;\nstring $selB[];\nint $cnttt = 0;\nfor($val in $selAAAB){\nselect (\"XXX:\"+$selAAAB[$cnttt]);\nstring $selbb[]=`ls-sl`; \n$selB[$cnttt]=$selbb[0];\n$cnttt++;\n}select $selB;\nstring $selnew[]=`ls-sl`;\n}referencesel")
	C_end1;

hotdog
	-label ""
	-annotation "a end"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("select -r $motooObjects;\n//select $selAAAB;")
	C_end2;

hotdog
	-label ""
	-annotation "ca end"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("halfautocv(0);\nprint \"+half+\";")
	C_end3;

hotdog
	-label ""
	-annotation "pgdown"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("select -r $motooObjects $sakiiObjects;\n\n//select $selAAAB $selnew;")
	C_pgdown1;

hotdog
	-label ""
	-annotation "a pgdown"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("select -r $sakiiObjects;\n\n//select $selnew;")
	C_pgdown2;

hotdog
	-label ""
	-annotation "ca pgdown"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("halfautocv(1);\nprint \"-half-\";")
	C_pgdown3;

hotdog
	-label ""
	-annotation "c +"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("")
	D_plus1;

hotdog
	-label ""
	-annotation "a +"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("")
	D_plus2;

hotdog
	-label ""
	-annotation "ca +"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("")
	D_plus3;

hotdog
	-label ""
	-annotation "/"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"hyperGraphPanel1\"){\nif(`keyframe -an keys -q -kc`!=0){\n$selkeyqude=sort(`keyframe -q -sl`);\n$FrA=$selkeyqude[0];\n$FrB=$selkeyqude[(size($selkeyqude) -1)];\nplaybackOptions -min $FrA -max $FrB;\n}\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nplaybackOptions -animationStartTime `currentTime -q`;\n}else{\nCurveOperation2 tquickPB3;\n}print \"{setMin[]}  {<sel key>[oL]}\\n\";")
	A_pp1;

hotdog
	-label ""
	-annotation "s /"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global float $prekey;son;\nselectKey -k -t $prekey;\nacktooluse(23);\nselectKey -clear;\nprint \"<chuan ran\\n\";\n")
	A_pp2;

hotdog
	-label ""
	-annotation "c /"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`keyframe -an keys -q -kc`==0){\nCurveOperation onekeyselect;\nacktooluse(22);selectKey -clear ;\n}else{\nacktooluse(22);\n}print \"L<=now\\n\";")
	A_pp3;

hotdog
	-label ""
	-annotation "a /"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("CurveOperation2 tquickPB1;\nprint \"X timesilder sel minmax\\n\";")
	A_pp4;

hotdog
	-label ""
	-annotation "\\"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\nplaybackOptions -animationEndTime `currentTime -q`;\n}else{\nCurveOperation2 tquickPB4;\n}print \"{setMax[]}  {>XXX<[oL]}\\n\";")
	A_qq1;

hotdog
	-label ""
	-annotation "s \\"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global float $nexkey;son;\nselectKey -k -t $nexkey;\nacktooluse(22);\nselectKey -clear;\nprint \"chuan ran>\\n\";")
	A_qq2;

hotdog
	-label ""
	-annotation "c \\"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`keyframe -an keys -q -kc`==0){\nCurveOperation onekeyselect;\nacktooluse(23);selectKey -clear ;\n}else{\nacktooluse(23);\n}print \"now=>R\\n\";")
	A_qq3;

hotdog
	-label ""
	-annotation "a \\"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//CurveOperation2 tquickPB2;\nprint \"X selkey>minmax\\n\";")
	A_qq4;

hotdog
	-label ""
	-annotation "z"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"hyperGraphPanel1\"){\nFrameJiLu;\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nFrameJiaoTiL;\n}else{\nif(size(`ls-sl`)==0){PreviousFrame;}\nelse{PreviousKey;}\n}\nprint \"jilu[hG] <>||[oL]  <_\\n\";")
	A_z1;

hotdog
	-label ""
	-annotation "a z"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\n\nglobal proc PreviousTime(){\nint $previousgo =`currentTime -q`-1;\ncurrentTime $previousgo;\n}PreviousTime;\n\n}else{\nPreviousFrame;\n}")
	A_z2;

hotdog
	-label ""
	-annotation "as z"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\nSelectHierarchyson;\n}else{\nSelectHierarchy;\n}\nprint \"SelectHierarchy SelectHierarchyson[oL]\\n\";\n\n\n\nglobal proc SelectHierarchyson(){\nstring $selection[] = `ls -sl`;// トップノードを取得\nif (size($selection) > 0) {\n    // DAG オブジェクトのみ取得（transform, shape など）\n    string $dagObjects[] = `listRelatives -ad -type \"dagNode\" -f $selection[0]`;\n    // ルートノード自身も含める\n    $dagObjects[size($dagObjects)] = $selection[0];\n    // 選択を更新\n    select -r $dagObjects;\n    print (\"DAGオブジェクトをすべて選択しました。\\n\");\n} else {\n    warning \"トップノードを1つ選択してください。\";\n}\n}")
	A_z3;

hotdog
	-label ""
	-annotation "x"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(size(`ls-sl`)==0){NextFrame;}\nelse{NextKey;}print \"_>\\n\";")
	A_x1;

hotdog
	-label ""
	-annotation "a x"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\nglobal proc NextTime(){\nint $nextgo =`currentTime -q`+1;\ncurrentTime $nextgo;\n}NextTime;\n}else{NextFrame;}")
	A_x2;

hotdog
	-label ""
	-annotation "a a"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_Aa(){\nif(`keyframe -an keys -q -kc`==0){\n//CurveOperation onekeyselect;\n}else\n\nif(`getPanel -wf`==\"outlinerPanel1\"){\nglobal int $loopabcAa;\nif($loopabcAa==0){\n$loopabcAa=1;\nkeyTangent -itt linear -ott linear;\n}else if($loopabcAa==1){\n$loopabcAa=0;\nkeyTangent -itt flat -ott flat;\n}\n}else{\nglobal int $loopabcA;\nif($loopabcA==0){\n$loopabcA=1;\nkeyTangent -itt spline -ott spline;\n}else if($loopabcA==1){\n$loopabcA=0;\nkeyTangent -itt auto -ott auto;\n}\n}print \"key Tangent auto-spline[gE]//linear-flat[oL]\\n\";\n}keyboard_Aa;")
	A_a1;

hotdog
	-label ""
	-annotation "c c"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("copyKey ;\n//////////////////////\nglobal proc copykeywork(){\nif (`keyframe -an keys -q -kc`==0){\ntimeSliderCopyKey;\n}else{\nCopySelected;\n}\n}\n")
	A_c1;

hotdog
	-label ""
	-annotation "a c_gpuOverride_set"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("print \"xxx\";\n/*-\nif(`getPanel -wf`==\"hyperGraphPanel1\"){\nsetkeyHIK;PreviousKey;\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nsetkeyHIK;NextKey;\n}else if(`getPanel -wf`==\"graphEditor1\"){\nsetkeyHIK;\n}else{\nselHIK;\n//string $imasel[]=`ls-sl`;setkeyHIK;select -cl;select $imasel;\n}print \"all setkey[gE] // <<[hG]key[oL]>> // all sel[mP]\\n\";")
	A_c2;

hotdog
	-label ""
	-annotation "c v"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_va(){\nif(`getPanel -wf`==\"outlinerPanel1\"){\n}else{\n$nowtimes = `currentTime -q`;\npasteKey -time $nowtimes -float $nowtimes -option merge -copies 1 -connect 0 -timeOffset 0 \n-floatOffset 0 -valueOffset 0;\n}\nprint \"key paste\\n\";\n}keyboard_va;\n//\nglobal proc pastekeywork(){\nif(`keyframe -an keys -q -kc`!=0){\nPasteSelected;\n}else{}\n}")
	A_v1;

hotdog
	-label ""
	-annotation "s"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//HoldCurrentKeys;\n\nif(`getPanel -wf`==\"outlinerPanel1\"){\nSetKeyAnimated;\n}else{\nCurveOperation onekeyadd;\nprint \"add holdkey\\n\";\n}")
	A_s1;

hotdog
	-label ""
	-annotation "c s"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"hyperGraphPanel1\"){\n//setkeyHIK_sel;PreviousKey;\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\n//setkeyHIK_sel;NextKey;\n\ndeleteEmptyAnimLayers();\n\nsaveAllShelves $gShelfTopLevel;//shelf save\nsyncExecuterBackupFiles();//すべてのスクリプトを保存\nscriptEditorInfo -clearHistory;//sukuriputo\n\ndeleteUnusedDisplayLayersExcludingReferenced;\n\n}else{SaveSceneAs;}\nprint \"saveas[mP]/HIKsetkey[gE]x/HIK[hG]x/setkey>clearALL[oL]\\n\";\ngomibakenotesclear;\ngomiblendclear;\n/////\nglobal proc deleteUnusedDisplayLayersExcludingReferenced(){//未使用ディスプレイレイヤ削除\n    string $layers[] = `ls -type displayLayer`;\n    for ($layer in $layers) {// デフォルトレイヤはスキップ\n        if ($layer == \"defaultLayer\") continue;\n        // リファレンス（読み取り専用）ならスキップ\n        if (`referenceQuery -isNodeReferenced $layer`) continue;\n        // メンバーがいなければ削除\n        string $members[] = `editDisplayLayerMembers -q $layer`;\n        if (size($members) == 0) {\n            delete $layer;\n            print (\"Deleted unused display layer: \" + $layer + \"\\n\");\n        }\n    }\n}\n/////\nglobal proc gomibakenotesclear(){\nstring $containers[] = `ls -type container \"BakeResultsContainer*\"`;\nif (size($containers) == 0) {\n    print(\"BakeResultsContainer ノードは見つかりませんでした。\\n\");\n} else {\n    for ($container in $containers) {\n        // ノードを選択\n        select -r $container;\n        // コンテナの中身を選択\n        SelectContainerContents;\n        // 選択されたノードを取得\n        string $selected[] = `ls -sl`;\n        // コンテナ自身を除外して中身だけを抽出\n        string $contentsOnly[];\n        for ($node in $selected) {\n            if ($node != $container) {\n                $contentsOnly[size($contentsOnly)] = $node;\n            }\n        }// 中身の有無を判定\n        if (size($contentsOnly) > 0) {\n            print($container + \" には中身があります（\" + size($contentsOnly) + \" ノード）。\\n\");\n        } else {\n            print($container + \" には中身がありません。\\n\");delete $container;\n        }\n    }\n}select -cl;}\n/////\nglobal proc gomiblendclear(){\nstring $blendAttrs[] = {\"blendParent1\",\n\"blendOrient1\",\"blendPoint1\",\"blendPoint2\",\"blendPoint3\"};//\"blend*\"\nstring $allTransforms[] = `ls -type transform`;\nfor ($obj in $allTransforms) {\n    for ($attr in $blendAttrs) {\n        string $fullAttr = ($obj + \".\" + $attr);\n        if (`objExists $fullAttr`){//キーがあるかどうかをチェック\n            int $keyCount = `keyframe -query -keyframeCount $fullAttr`;\n            if ($keyCount > 0) {\n                print(\"スキップ（キーあり）: \" + $fullAttr + \"\\n\");\n            } else {\n                catchQuiet(`deleteAttr $fullAttr`);\n                print(\"Deleted: \" + $fullAttr + \"\\n\");\n            }\n        }\n    }\n}\n}")
	A_s2;

hotdog
	-label ""
	-annotation "as s"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\n\nint $kaishittt = `playbackOptions -q -minTime`;\nint $jieshuttt = `playbackOptions -q -maxTime`;\nstring $lLayers[] = getSelectedAnimLayer(\"AnimLayerTab\");\nfor ($layer in $lLayers){print ($layer+\"\\n\");\nsetKeyframe -t $kaishittt ($layer+\".weight\");\nsetKeyframe -t $jieshuttt ($layer+\".weight\");}\n\n}else{\nCurveOperation threekeyadd;\nprint \"CurveOperation threekeyadd>>nokey>mmm setkey /　youkey>LMR3keyadd / selA-Bkey>alladd\\n\";\n}")
	A_s3;

hotdog
	-label ""
	-annotation "cas s"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_CSAs(){\nif(size(`ls-sl`)!=0){\nGraphEditorUnlockChannel;\nCurveOperation2 seleminmax;\nglobal int $notime;\nglobal int $sttime;son;\ncurrentTime ($sttime-30);CurveOperation onekeyadd;CurveOperation onekeyselect;CurveOperation allzero;\nfilterCurve;selectKey -cl;\nCurveOperation onekeyselect;cutKey;\n//CurveOperation deleksey;\ncurrentTime $notime;\n}}keyboard_CSAs;\nprint \"filterCurve強化版\\n\";\n//CurveOperation LRkeycut;\n//CurveOperation filtercurve;")
	A_s4;

hotdog
	-label ""
	-annotation "s s"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\nkeytongyiA;\n}else if(`getPanel -wf`==\"hyperGraphPanel1\"){\nkeytongyiB;\n}else{keyboard_Sb;}\nprint \"setKey/ clear keyA[oL] clearkeyB[hG]\\n\";\n\nglobal proc keytongyiA(){//雑乱のキー大量選択して、当前時間に統一キー打つし、他の雑キー削除\nglobal string $selcurves[];\nglobal float $FrameA;\nglobal float $FrameB;\nglobal int $notime;\nglobal int $keyjige;son;//print $FrameA;print $FrameB;\n//CurveOperation onekeyadd;//$nowt=`currentTime -q`;\n//SetKeyAnimated;\nglobal string $selcurvesb0[];son0;\nfor($a in $selcurvesb0){setKeyframe $a;}\n\nfor ($each in $selcurves){\nselectKey -add -k -t ($FrameA+\":\"+$FrameB) $each;\n}\nfor ($each in $selcurves){\nselectKey -rm -k -t $notime $each;\n}cutKey -animation keys -clear;\n\nCurveOperation onekeyselect;\n$keyjigenew=`keyframe -an keys -q -kc`;\nselectKey -clear ;\nprint ($keyjige+\">>>\"+$keyjigenew);\n}\n////////////////\nglobal proc keytongyiB(){\n$notimef=`currentTime -q`;\nif(`keyframe -an keys -q -kc`!=0){\n$selkeyssss=`keyframe -q -name`;\n$selkeytime=`keyframe -selected -q -timeChange $selkeyssss`;\n$selkeyssssname=`listConnections -plugs true $selkeyssss`;\n$channelshu=`size($selkeyssssname)`;\n//`findKeyframe -timeSlider -which previous` : `findKeyframe -which previous`\n$prekeyy=`findKeyframe -timeSlider -which previous`;\n$nexkeyy=`findKeyframe -timeSlider -which next`;\nprint ($prekeyy+\"-*\");print (\"-\"+$nexkeyy+\"\\n\");\n\t\t\t\t\tsetKeyframe -insert -t $prekeyy $selkeyssssname;\n\t\t\t\t\tsetKeyframe -insert -t $nexkeyy $selkeyssssname;\n\t\t\t\t\tCurveOperation delekey;\n}\n}\n////////////////\nglobal proc keyboard_Sb(){\n//if(size(`channelBox -q -sma mainChannelBox`)>0){\n//channelBoxCommand -key;\nif(`keyframe -an keys -q -kc`!=0){\nglobal string $selcurvesb0[];son0;\nfor($a in $selcurvesb0){setKeyframe $a;}\n}else{SetKeyAnimated;}\n}")
	A_s5;

hotdog
	-label ""
	-annotation "a s"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_As(){\nif(`getPanel -wf`==\"graphEditor1\"){\nglobal int $loopabcB;\nif($loopabcB==0){\n$loopabcB=1;\nif(`keyframe -an keys -q -kc`!=0){keyTangent -e -itt automix -ott automix;}else{\nanimCurveEditor -edit -displayNormalized 0 graphEditor1GraphEd;\ninViewMessage -smg \"normal\" -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 500;}\n}else if($loopabcB==1){\n$loopabcB=2;\nif(`keyframe -an keys -q -kc`!=0){keyTangent -e -itt autocustom -ott autocustom ;}else{\nanimCurveEditor -edit -displayNormalized 1 graphEditor1GraphEd;\ninViewMessage -smg \"0-1\" -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 500;}\n}else if($loopabcB==2){\n//keyTangent -e -itt autoease -ott autoease;\n$loopabcB=0;}\n}print \"key Tangent auto-auto[gE]//nokey 0-1show[gE]\\n\";\n}keyboard_As;")
	A_s6;

hotdog
	-label ""
	-annotation "as q"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_Qa(){\nif(`getPanel -wf`==\"graphEditor1\"){\nselect \"*bayunpaiX*\";pickWalk -d up;\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nselect \"*bayunpaiX*\";pickWalk -d up;\nfoundconmubiao;pickWalk -d up;\n}else{\nselect \"*bayunpaiX*\";pickWalk -d up;pickWalk -d up;\n}print \"LTW  oya[mP] ko[gE] mubiao[oL]\\n\";\n}keyboard_Qa;\n")
	A_q1;

hotdog
	-label ""
	-annotation "c q"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"hyperGraphPanel1\"){\n    string $check = `confirmDialog -title \"deletekey\"\n                                   -message \"nowTime allobj allkey delete!!!?\"\n                                   -button \"Yes\"\n                                   -button \"No\"\n                                   -defaultButton \"Yes\"\n                                   -cancelButton \"No\"\n                                   -icon \"information\"`;\nif($check == \"Yes\"){select -cl;SATN_Execsss;CurveOperation onekeyselect;\nint $selkeyshuliang=(size(sort(`keyframe -q -sl`)));\nif($selkeyshuliang!=0){cutKey -clear;select -cl;}else{select -cl;}\nprint (\"\\n>>\"+$selkeyshuliang+\"<< key delet\\n\");\n}else if($check == \"No\"){}\n\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\n\n$selcv=`keyframe -q -name`;\n$selkeyss=sort(`keyframe -q -sl`);\n$Framqian=$selkeyss[0];\nCurveOperation selectKeyWplus;\n$selkeybb=sort(`keyframe -q -sl`);\n$sellkeyA=$selkeybb[0];\n$sellkeyB=$selkeybb[(size($selkeybb) -1)];\n\nselectKey -clear ;\n//selectKey -add -k -t $Framqian $selcv;\nselectKey -add -k -t ($selkeyss[0]+\":\"+$selkeyss[(size($selkeyss) -1)]) $selcv;\nCurveOperation delekey;\n\nselectKey -clear ;\nselectKey -add -k -t $sellkeyA -t $sellkeyB $selcv;\nif(`keyframe -an keys -q -kc`!=0){\nkeyTangent -e -itt autocustom -ott autocustom ;\n}\n\n\n}else{\n\nif(size(`ls-sl`)==0){\nstring $lLayers[] = getSelectedAnimLayer(\"AnimLayerTab\");\ndelete $lLayers;\n}else{\nCurveOperation delekey;\n}\n\n}print \"delsel_key/delselkey+LRkeyTangentAuto[oL]/nowTime allkeydel[hG]/delsel_AnimLayerTab\\n\";")
	A_q2;

hotdog
	-label ""
	-annotation "cs q"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"hyperGraphPanel1\"){\ncs_qwer_work(1);CurveOperation selkeya_b;\nCurveOperation foundpreviouskey;\n}else if(`getPanel -wf`==\"renderView\"){\ncs_qwer_work(1);CurveOperation selkeya_b;\nCurveOperation foundnextkey;\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\ncs_qwer_work(1);CurveOperation selkeya_b;\nCurveOperation selectKeyWplus;\n}else if(`getPanel -wf`==\"scriptEditorPanel1\"){\ncs_qwer_work(1);CurveOperation selkeya_b;\nCurveOperation selectKeyWminus;\n}\n\nelse{\ncs_qwer_work(1);\n}\nprint \"{>..-|csq|-..<[sE]}  {<..+|csq[hG]}  {|csq|}  {csq|+..>[gE]}  {<..+|csq|+..>[oL]}\\n\";\n")
	A_q3;

hotdog
	-label ""
	-annotation "s q"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc zaiselectwork(){\nglobal string $sqAA[];\nif(size(`ls-sl`)==0){\nselect $sqAA;\n}else{\n$sqAA=`ls-sl`;\nselect -cl;\n}\n}print \"xxxx\\n\";")
	A_q4;

hotdog
	-label ""
	-annotation "ca q"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\nshowchwork(10);\n}else{\nshowchwork(0);\n}\nprint \"<show all>  <show channel[Ol]>\\n\";")
	A_q5;

hotdog
	-label ""
	-annotation "sca q"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\n    string $weightAttrs[] = {};// すべてのアニメーションレイヤーのウエイトカーブのみをグラフエディタに表示\n    for ($layer in `ls -type animLayer`) {\n        string $weightAttr = ($layer + \".weight\");\n        if (`objExists $weightAttr`) {\n            stringArrayInsertAtIndex(size($weightAttrs), $weightAttrs, $weightAttr);\n        }\n    }// ウエイトカーブが見つかったら選択してグラフエディタに表示\n    if (size($weightAttrs) > 0) {\n        select -r $weightAttrs;\n    } else {\n        warning(\"ウエイトカーブが見つかりませんでした。\\n\");\n    }\n}else if(`getPanel -wf`==\"hyperGraphPanel1\"){\nstring $lLayers[] = getSelectedAnimLayer(\"AnimLayerTab\");\nlayerEditorSelectObjectAnimLayer($lLayers);\nprint \"1>>sel anmelayer obj\\n\";\n\n}else{\nstring $layers[] = `ls -type animLayer`;// 選択されているレイヤーを調べる\nstring $weightAttrs[] = {};\nfor ($layer in $layers) {\n    int $isSelected = `getAttr ($layer + \".selected\")`;\n    if ($isSelected) {\n        string $weightAttr = ($layer + \".weight\");\n        if (`objExists $weightAttr`) {\n            stringArrayInsertAtIndex(size($weightAttrs), $weightAttrs, $weightAttr);\n        }\n    }select -r $weightAttrs;\n}print \"2>>sel anmelayer weight\\n\";\n}\n///////////////////////////////////////////BaseAnimation sele\nglobal proc BaseAnimationsel(){\nstring $rootLayer = `animLayer -query -root`;\nif(size($rootLayer)){\n\tstring $animLayers[] = `ls -type \"animLayer\"`;\n\tfor($i=0;$i<size($animLayers);$i++){\n\t\tanimLayerEditorOnSelect($animLayers[$i], 0);} // From layerEditor.mel\n\tanimLayerEditorOnSelect($rootLayer, 1);}\n}\n\nglobal proc layselobj(){//sele animelayer > zhuan object //オブジェクト選択\nstring $lLayers[] = getSelectedAnimLayer(\"AnimLayerTab\");\nlayerEditorSelectObjectAnimLayer($lLayers);\n}\n\n/*-global proc newlayeulerfilter(){\nstring $selLayer[] = getSelectedAnimLayer(\"AnimLayerTab\");\nlayselobj;\nstring $selobj[]=`ls-sl`;\nBaseAnimationsel;\nselect  $selobj;\nkeyboard_CSAs;\n//animLayerEditorOnSelect \"BaseAnimation\" 0;\n//animLayerEditorOnSelect($selLayer[0], 1);\nselect -cl;select $selobj;\n}-*/\n\n/*---------------------------------------\nif(size(`ls-sl`)==0){\nlayselobj;\n}else if(`keyframe -an keys -q -kc`==0){//if meiyou key>sele weightkey\nstring $Layersweight[] = getSelectedAnimLayer(\"AnimLayerTab\");\nselectKey -add -k $Layersweight;\n}else{//weightkey dandu xianshi\n$selweightcurves=`keyframe -q -name`;\n$graphoutliner =`editor -q -mainListConnection graphEditor1GraphEd`;//get graph outliner \n$graphobjs=`expandSelectionConnectionAsArray $lianjie`;//get selection from outliner\nselectionConnection -e -clear $graphoutliner;\nfor($weighttt in $selweightcurves){\nselectionConnection -e -select $weighttt $graphoutliner;\n}\n}scriptEditorInfo -clearHistory;\nprint \"選択しているレイヤに>>>オブジェクトの選択>>>animelayer weihtkey 選択>>>単独表示\";\n-*/")
	A_q6;

hotdog
	-label ""
	-annotation "a q"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_Qb(){\nif(`getPanel -wf`==\"graphEditor1\"){\n if(`keyframe -an keys -q -kc`==0){CurveOperation2 gostartend;}else{CurveOperation2 showminmax;}\n}else if(`getPanel -wf`==\"hyperGraphPanel1\"){\ncurrentTime 0;\n}else{\nCurveOperation2 gostartend;\n}\nprint \"m<>m[mP] selkey st<>ed[gE] 0F[hG]\\n\";\n}keyboard_Qb;\n\n")
	A_q7;

hotdog
	-label ""
	-annotation "cs w"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"hyperGraphPanel1\"){\ncs_qwer_work(2);CurveOperation selkeya_b;\nCurveOperation foundpreviouskey;\n}else if(`getPanel -wf`==\"renderView\"){\ncs_qwer_work(2);CurveOperation selkeya_b;CurveOperation foundnextkey;\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\ncs_qwer_work(25);\n}else if(`getPanel -wf`==\"scriptEditorPanel1\"){\ncs_qwer_work(100);\n}else{\ncs_qwer_work(2);\n}\nprint \"{<..+|csw[hG]  |csw|  csw|+..>[rV]}  {50[oL]}  {100[sE]}\\n\";")
	A_w1;

hotdog
	-label ""
	-annotation "a w"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_Wa(){\nif(`getPanel -wf`==\"outlinerPanel1\"){\nshowONFF(10);\n}else if(`getPanel -wf`==\"hyperGraphPanel1\"){\nshowONFF(11);\n}else{\nackToggleMoveMode;\n}\nprint \"rayONOFF[hG] Move world<>local[mP] WireframeONOFF[oL]\\n\";\n}keyboard_Wa;\n\n//\nglobal proc ackToggleMoveMode() {\nTranslateToolWithSnapMarkingMenu;\n\tint $movX = `manipMoveContext -q -mode Move`;\n\t// 0 = Local, 1 = Global, 2 = World;\n\tif ($movX == 0) {\n\t\tmanipMoveContext -e -mode 2 Move;print \"World\";\ninViewMessage -smg \"World\" -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 500;\n\t} else {\n\t\tmanipMoveContext -e -mode 0 Move;print \"Local\";\ninViewMessage -smg \"Local\" -pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 500;\n\t}\nTranslateToolWithSnapMarkingMenuPopDown;\n}")
	A_w2;

hotdog
	-label ""
	-annotation "as w"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_Wa(){\nif(`getPanel -wf`==\"graphEditor1\"){\nselect \"*bayunpaiO*\";\npickWalk -d right;\npickWalk -d down;\npickWalk -d right;selectKey;\nCurveOperation Key_selobj;\npickWalk -d down;pickWalk -d right;\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nselect \"*bayunpaiO*\";\npickWalk -d right;\npickWalk -d down;\npickWalk -d right;selectKey;\nCurveOperation Key_selobj;\npickWalk -d down;pickWalk -d right;\nfoundconmubiao;pickWalk -d up;\n}else{\nselect \"*bayunpaiO*\";\npickWalk -d right;\npickWalk -d down;\npickWalk -d right;selectKey;\nCurveOperation Key_selobj;\n}print \"LTL  oya[mP] ko[gE] mubiao[oL]\\n\";\n}keyboard_Wa;")
	A_w3;

hotdog
	-label ""
	-annotation "ca w"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\nglobal int $loopTxyz;\nif($loopTxyz==0){$loopTxyz=1;\nshowchwork(21);\n}else if($loopTxyz==1){$loopTxyz=2;\nshowchwork(22);\n}else if($loopTxyz==2){$loopTxyz=0;\nshowchwork(23);\n}\n}else{\nshowchwork(1);\n}\nprint \"<T only>  <T xyz[Ol]\\n>\";")
	A_w4;

hotdog
	-label ""
	-annotation "c e"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"hyperGraphPanel1\"){\npickWalk -d down;\npickWalk -d right;\npickWalk -d right;\npickWalk -d down;\npickWalk -d right;\nprint \"sele>down>right>right>down>right\\n\";\n/*-\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nPickWalkDown;\nPickWalkRight;\nprint \"sele>down>right\\n\";\n-*/\n}else{\nselectKey -clear;\nPickWalkDown;\nPickWalkRight;\npickWalkRight;\nprint \"sele>down>right>right\\n\";\n}")
	A_e1;

hotdog
	-label ""
	-annotation "cs e"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"hyperGraphPanel1\"){\ncs_qwer_work(3);CurveOperation selkeya_b;\nCurveOperation foundpreviouskey;\n}else if(`getPanel -wf`==\"renderView\"){\ncs_qwer_work(3);CurveOperation selkeya_b;CurveOperation foundnextkey;\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\ncs_qwer_work(35);\n}else{\ncs_qwer_work(3);\n}\nprint \"{<..+|cse[hG]  |cse|  [rV]cse|+..>}   {50[Ol]}\\n\";")
	A_e2;

hotdog
	-label ""
	-annotation "a e"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc ackToggleRotateMode() {\nRotateToolWithSnapMarkingMenu;\n\tint $rotX = `manipRotateContext -q -mode Rotate`;\n\t// 0 = Local, 1 = Global, 2 = Gimbal\n\tif ($rotX == 0) {\n\t\tmanipRotateContext -e -mode 1 Rotate;\n\t\tprint \"World\";inViewMessage -smg \"World\" -pos \"topCenter\" -fade -fadeStayTime 500;\n\t} else {\n\t\tmanipRotateContext -e -mode 0 Rotate;\n\t\tprint \"Local\";inViewMessage -smg \"Local\" -pos \"topCenter\" -fade -fadeStayTime 500;\n\t}\nRotateToolWithSnapMarkingMenuPopDown;\n}ackToggleRotateMode;\n")
	A_e3;

hotdog
	-label ""
	-annotation "as e"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("$nowwindow=`getPanel -wf`;print ($nowwindow+\"\\n\");\n//\nglobal int $loopf1cx;\nif($loopf1cx==0){$loopf1cx=1;\nincrementSelectedShelf(-1);\n}else if($loopf1cx==1){$loopf1cx=0;\njumpToNamedShelf(\"testxx\");\n}")
	A_e4;

hotdog
	-label ""
	-annotation "ca e"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\nglobal int $loopOxyz;\nif($loopOxyz==0){$loopOxyz=1;\nshowchwork(31);\n}else if($loopOxyz==1){$loopOxyz=2;\nshowchwork(32);\n}else if($loopOxyz==2){$loopOxyz=0;\nshowchwork(33);\n}\n}else{\nshowchwork(2);\n}\nprint \"<O only>  <O xyz[Ol]>\\n\";")
	A_e5;

hotdog
	-label ""
	-annotation "c r"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`window -ex referenceEditorPanel1Window`) deleteUI referenceEditorPanel1Window;else ReferenceEditor;\n")
	A_r1;

hotdog
	-label ""
	-annotation "sc r"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(size(`ls-sl`)==0){\n}else{\nif(`getPanel -wf`==\"hyperGraphPanel1\"){\ncs_qwer_work(4);CurveOperation selkeya_b;\nCurveOperation foundpreviouskey;\n}else if(`getPanel -wf`==\"renderView\"){\ncs_qwer_work(4);CurveOperation selkeya_b;CurveOperation foundnextkey;\n}else{\ncs_qwer_work(4);\n}\n}print \"<..+|csr[hG]  |csr|  [rV]csr|+..>\\n\";")
	A_r2;

hotdog
	-label ""
	-annotation "a r"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_Ra(){\nprint(size(`ls-sl`)+\" obj | \"+size(`ls-sl -type joint`)+\" Joint | \"+size(sort(`keyframe -q -sl`))+\" key | (*^*)\");\ninViewMessage -smg (size(`ls-sl`)+\"obj__\"+size(`ls-sl -type joint`)+\"joint__\"+size(sort(`keyframe -q -sl`))+\"key\") \n-pos \"topCenter\" -bkc 0x00000000 -fade -fadeStayTime 500;\n}keyboard_Ra;")
	A_r3;

hotdog
	-label ""
	-annotation "as r"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc SceneFolderOpen(){\n//現在開いているシーンのパス取得\nstring $path = `file -q -expandName` ;\n//現在のシーンのあるディレクトリのパスの取得\nstring $DilePass = dirname( $path ) ;\n//print(\"ディレクトリ場所:\" + $DilePass + \"\\n\");\nsystem (\"load \"+ $DilePass +\"/\");\n}SceneFolderOpen;")
	A_r4;

hotdog
	-label ""
	-annotation "ca r"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\nshowchwork(9);\n}else{\nshowchwork(3);\n}\nprint \"<S only>  <O onebyone[Ol]>\\n\";")
	A_r5;

hotdog
	-label ""
	-annotation "a d"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`keyframe -an keys -q -kc`==0){\nSelectNone; \n}else{\nselectKey -clear;\n}print \"nosele/nokey\\n\";")
	A_d1;

hotdog
	-label ""
	-annotation "a t"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//ShowManipulators;\nglobal proc keyboard_T(){\nif(`getPanel -wf`==\"graphEditor1\"){\nif(`keyframe -an keys -q -kc`==0){}else{\n$selchannelT=`keyframe -q -name`;\nselectKey -add -k $selchannelT;\n}\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nif(`keyframe -an keys -q -kc`!=0){\n$selkeyssss=`keyframe -q -name`;\n$selkeyssssname=`listConnections -plugs true $selkeyssss`;//get xxx.xxx\n$getgraph=`editor -q -mainListConnection graphEditor1GraphEd`;\n//$selchannel=`expandSelectionConnectionAsArray $getgraph`;\nselectionConnection -e -clear $getgraph;\nselectionConnection -e -select $selkeyssssname $getgraph;\n}\n}print \"selkey>curve[gE] selkey>onlyshow[oL]\\n\";\n}keyboard_T;\n")
	A_t1;

hotdog
	-label ""
	-annotation "1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"renderView\"){LowQualityDisplay;}\nelse if(`getPanel -wf`==\"hyperGraphPanel1\"){\n\nglobal float $time_a;\nglobal float $time_b;\nint $minnew=$time_a;\nint $maxnew=$time_b;\nplaybackOptions -min $minnew -max $maxnew;\n\n}else{CutTime_abcd \"select_1_2\";}\nprint \"frame1<>2 lowdisplay[rV] min1_max2[hG]\\n\";\n")
	A_1a;

hotdog
	-label ""
	-annotation "s 1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("CutTime_abcd \"CutTime_A\";\nprint \"frame1 set\\n\";\n")
	A_1b;

hotdog
	-label ""
	-annotation "cs 1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_1c(){\nif(`getPanel -wf`==\"graphEditor1\"){\nif(`keyframe -an keys -q -kc`==0){\nCurveOperation onekeyselect;\nackMoveKeys \"left\";\n}else{\nackMoveKeys \"left\";\n}\n}else {\nCurveOperation Tzero;\n}\nprint \"T>0[]  <<<key[gE]\";\n\n}keyboard_1c;")
	A_1c;

hotdog
	-label ""
	-annotation "a 1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(size(`ls-sl`)==0){\nSATN_Execsss;\n}else{\nCurveOperation onekeyselect;\n}\n\n//https://www.deathponta.com/entry/180823_selectAnimatedTransformNode\nproc SATN_Execsss(){\n    global string $animatedTransforms[];select -cl;\n    string $transforms[] = `ls -type transform`;\n    // リストを一旦クリア\n    //textScrollList -e -ra \"tsl_animTrans\";\n    // すべてのトランスフォームから・・\n    for( $trans in $transforms ){\n        // 接続されているカーブをリストアップ\n        $animCrvs = `findKeyframe -c $trans`;\n        // ドリブンキーの場合はリストに登録しない\n        int $isDrivenKey = 0;\n        for( $animCrv in $animCrvs ){\n            string $type = `nodeType $animCrv`;\n            $isDrivenKey_temp = `gmatch $type \"animCurveU?\"`;\n            if( $isDrivenKey_temp == 1 ){\n                $isDrivenKey = $isDrivenKey_temp;\n                continue;\n            }\n        }\n        if( $isDrivenKey == 1 )continue;\n        // １つでもアニメーションカーブがあればそのオブジェクトを選択\n        if( size($animCrvs) > 0 ){\n            select -add $trans;\n        }\n    }print ( \"key設定されているobj : \" + size(`ls-sl`)+\"\\n\");\n}")
	A_1d;

hotdog
	-label ""
	-annotation "as 1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_1b(){\nif(size(`ls-sl`)==0){}else{\nif(`getPanel -wf`==\"graphEditor1\"){CurveOperation guodukeyA;}\nelse if(`getPanel -wf`==\"hyperGraphPanel1\"){\n//\n$selcurveeee=`keyframe -q -name`;print $selcurveeee;\n$timelistttt=`keyframe -selected -q -timeChange $selcurveeee`;\nCurveOperation guodukeyA;\nfor ($n = 0;$n < `size($selcurveeee)`; $n++){\nselectKey -add -k -t $timelistttt[$n] $selcurveeee[$n];\nselectKey -tgl -k -t ($timelistttt[$n]-1) $selcurveeee[$n];\nselectKey -tgl -k -t ($timelistttt[$n]+1) $selcurveeee[$n];\n}keyTangent -e -itt auto -ott auto;selectKey -clear ;\n//\n}\nelse{CurveOperation guodukeyB;}\n}\nprint \"addkey guodu小[gE]<<gai[hG]　guodu大[hoka]\";\n}keyboard_1b;\n")
	A_1e;

hotdog
	-label ""
	-annotation "ca 1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//channelBoxCommand -break;  \nprint \"channel>keyshan  ＜＜使用しない\\n\";\n\n\n/*-\nglobal proc keyboard_1c(){\nglobal string $selchan[];son;\nif(size($selchan)!=0){\nchannelBoxCommand -break;\n}else if(size(`ls-sl`)==2){\npastkeywork_x_xyz(1);\n}\nprint \"channel>keyshan\\n\";\n}keyboard_1c;")
	A_1f;

hotdog
	-label ""
	-annotation "cas 1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_1a(){\nif(`getPanel -wf`==\"graphEditor1\"){\nif(`keyframe -an keys -q -kc`!=0){CurveOperation allzero;}\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nfoundconsaki;pickWalk -d up;\n}else{\nfoundconsaki;\n}\nprint \"foundconsakiup[oL] foundconsaki[mP] selkey>0[gE]\\n\";\n}keyboard_1a;")
	A_1g;

hotdog
	-label ""
	-annotation "c 1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_c1(){\nif(`getPanel -wf`==\"graphEditor1\"){\nif(`keyframe -an keys -q -kc`!=0){CurveOperation foundpreviouskey;}else{global float $prekey;son;selectKey -k -t $prekey;}\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nif(`keyframe -an keys -q -kc`!=0){CurveOperation foundnextkey;}else{global float $nexkey;son;selectKey -k -t $nexkey;}\n\n}else if(`getPanel -wf`==\"hyperGraphPanel1\"){\nif(`keyframe -an keys -q -kc`!=0){CurveOperation foundpreviouskey;}else{global float $prekey;son;selectKey -k -t $prekey;}\nif(`keyframe -an keys -q -kc`!=0){CurveOperation foundnextkey;}else{global float $nexkey;son;selectKey -k -t $nexkey;}\n\n}else if(`getPanel -wf`==\"scriptEditorPanel1\"){\nif(`keyframe -an keys -q -kc`!=0){\nstring $xuanzhe[] = `keyframe -q -name`;\nfloat $allKeys[] = sort(`keyframe -q -sl`);\nselectKey -rm -k -t $allKeys[0] $xuanzhe;\nselectKey -rm -k -t $allKeys[(size($allKeys) -1)] $xuanzhe;}\n//\n}else if(`getPanel -wf`==\"renderView\"){\nif(`keyframe -an keys -q -kc`!=0){\nstring $xuanzhe[] = `keyframe -q -name`;\nfloat $allKeys[] = sort(`keyframe -q -sl`);\nselectKey -tgl -k -t ($allKeys[0]-1) $xuanzhe;\nselectKey -tgl -k -t ($allKeys[(size($allKeys) -1)]+1) $xuanzhe;}\n\n\n}else{\nToggleIsolateSelect;\n}\nprint \"{onlyshow[mP]}//{<+**addsel[gE]}//{addsel**+>[oL]}//<+**addsel**+>[hG]//>-**addsel**-<[sE]\\n\";\n}keyboard_c1;")
	A_1h;

hotdog
	-label ""
	-annotation "2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"renderView\"){MediumQualityDisplay;}\nelse if(`getPanel -wf`==\"hyperGraphPanel1\"){\n\nglobal float $time_b;\nglobal float $time_c;\nint $minnew=$time_b;\nint $maxnew=$time_c;\nplaybackOptions -min $minnew -max $maxnew;\n\n}\nelse{CutTime_abcd \"select_2_3\";}\nprint \"frame2<>3 meddisplay[rV] min2_max3[hG]\\n\";\n")
	A_2a;

hotdog
	-label ""
	-annotation "s 2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("CutTime_abcd \"CutTime_B\";\nprint \"frame2 set\\n\";")
	A_2b;

hotdog
	-label ""
	-annotation "c 2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_c2(){\nif(`getPanel -wf`==\"graphEditor1\"){\n//\nglobal int $loopc2;\nif($loopc2==0){$loopc2=1;\nCurveOperation2 seleminmax;\n}else if($loopc2==1){$loopc2=2;\nCurveOperation selectKeyWminus;\n}else if($loopc2==2){$loopc2=0;\nCurveOperation2 seleminmax;\nglobal string $selcurves[];global float $FrameA;global float $FrameB;son;\nselectKey -k -t $FrameA -t $FrameB $selcurves;\n}\n}else{\nviewchangework;\n}\nprint \"{viewchange[mP]}   //////   {maxminkeysel*3[gE]}\\n\";\n}keyboard_c2;\n\n//\nglobal proc viewchangework(){\n$getcam=`getPanel -wf`;\nstring $camera=`modelPanel -q -camera $getcam`;//dang qian modepanel view name\nif($camera==\"persp\"){\nlookThroughModelPanel front $getcam;\n}else if($camera==\"front\"){\nlookThroughModelPanel side $getcam;\n}else if($camera==\"side\"){\nlookThroughModelPanel back $getcam;\n}else if($camera==\"back\"){\nlookThroughModelPanel top $getcam;\n}else if($camera==\"top\"){\nlookThroughModelPanel left $getcam;\n}else if($camera==\"left\"){\nlookThroughModelPanel persp $getcam;\n}\n}\n//\nglobal proc viewchangeworkB(){\nstring $camera=`modelPanel -q -camera modelPanel4`;\nif($camera==\"back\"){\nlookThroughModelPanel left modelPanel4;\n}else if($camera==\"left\"){\nlookThroughModelPanel persp modelPanel4;\n}else if($camera==\"persp\"){\nlookThroughModelPanel back modelPanel4;\n}\n}")
	A_2c;

hotdog
	-label ""
	-annotation "a 2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(size(`ls-sl`)==0){allselwork;\n}else{\nif(`keyframe -an keys -q -kc`==0){\nglobal int $alt2loop;\nif($alt2loop==0){$alt2loop=1;\nlanrenselekeylr(0);\n}else if($alt2loop==1){$alt2loop=0;\nlanrenselekeylr(1);\n}\n}else{\nCurveOperation selectkeyA_B;\n}\n}\nprint \" <*+*> <1*+|> <|+*1>\\n\";\n\n\nglobal proc allselwork(){\nstring $check = `confirmDialog -title \"allJoint/allObject/\"\n                                   -message \"all what？\"\n                                   -button \"allJoint\"\n                                   -button \"allObject\"\n                                   -button \"X\"\n                                   -cancelButton \"X\"\n                                   -icon \"information\"`;\nif($check == \"allJoint\"){\nselect `ls -type joint`;\n}else if($check == \"allObject\"){\nselect `ls -type mesh`;\n}else{}\n}\n/*-https://help.autodesk.com/cloudhelp/JPN/MayaCRE-Tech-Docs/Commands/confirmDialog.html\n-defaultButton(-db)//Enter キー\n-cancelButton(-cb)//[Esc]キー\n-dismissString(-ds)//[閉じる]\n-*/")
	A_2d;

hotdog
	-label ""
	-annotation "as 2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("print \"zzzzz\";")
	A_2e;

hotdog
	-label ""
	-annotation "ca 2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_2f(){\nglobal string $selobj[];\nglobal int $selshu;\nglobal string $selchan[];son;\n\n//\nif(size($selchan)!=0){\nfor($objA in $selobj){\nfor($obj in $selchan){\nint $vis=(`getAttr -lock ($objA+\".\"+$obj)`) ? 0 : 1;\nsetAttr -lock $vis ($objA+\".\"+$obj); \n}}\n}else if(size($selchan)==0||$selshu!=2){\nglobal int $loopca2;\nif($loopca2==0){$loopca2=1;\nallLo;\n}else if($loopca2==1){$loopca2=0;\nallunLo;\n}\n\n//\n}\nprint \"channel>lockonoff\\n\";\n}keyboard_2f;\n")
	A_2f;

hotdog
	-label ""
	-annotation "cas 2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_2g(){\nif(size(`ls-sl`)==0){\n\n}else{\nif(`getPanel -wf`==\"graphEditor1\"){\nkeyframe -animation keys -absolute -valueChange 1;\n}else{\nfoundconmubiao;\n}\n}print \"foundconmubiao[mP] selkey>1[gE]\\n\";\n}keyboard_2g;\n")
	A_2g;

hotdog
	-label ""
	-annotation "cs 2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"graphEditor1\"){\nif(`keyframe -an keys -q -kc`==0){\nCurveOperation onekeyselect;\nackMoveKeys \"right\";\n}else{\nackMoveKeys \"right\";\n}\n}else{\nCurveOperation Rzero;\n}\nprint \"O>0[] <<<key[gE]\\n\";")
	A_2h;

hotdog
	-label ""
	-annotation "3"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"renderView\"){HighQualityDisplay;}\nelse{CutTime_abcd \"select_1_3\";}\nprint \"frame1<>3 highdisplay[rV]\\n\";\n\n\n\n/*-\nif(`getPanel -wf`==\"outlinerPanel1\"){\nglobal int $loop3a;\nif($loop3a==0){$loop3a=1;\nselect $seleobjB[2];\n}else if($loop3a==1){$loop3a=0;\nselect $seleobjB[3];\n}\n\n}else{\nCutTime_abcd \"select_1_3\";}\n//HighQualityDisplay\nprint \"frame1<>3[mP]  ////  O[hG]   ////  ~~F11[oL]\";")
	A_3a;

hotdog
	-label ""
	-annotation "s 3"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("CutTime_abcd \"CutTime_C\";\nprint \"frame3 set\\n\";")
	A_3b;

hotdog
	-label ""
	-annotation "c 3"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"graphEditor1\"){\nif(`keyframe -an keys -q -kc`!=0){CurveOperation selectKeyLminus;}\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nif(`keyframe -an keys -q -kc`!=0){CurveOperation selectKeyRminus;}\n}//else{shelfchang;}\nprint \"selkeyjianxuan   ->***[gE]//***<-[oL]\\n\";\n\n\nglobal proc shelfchang(){//ToggleColorFeedback\nglobal int $Rigshelf;\nglobal int $MOotshelf;\nglobal int $Elseshelf;\nglobal int $changeshelf;\n$Rigshelf=9;\n$MOotshelf=17;\n$Elseshelf=18;\nif($changeshelf==0){\n$changeshelf=1;\nshelfTabLayout -edit -selectTabIndex $MOotshelf ShelfLayout;\n}else if($changeshelf==1){\n$changeshelf=0;\nshelfTabLayout -edit -selectTabIndex $Elseshelf ShelfLayout;\n}else if($changeshelf==2){\n$changeshelf=0;\nshelfTabLayout -edit -selectTabIndex $Rigshelf ShelfLayout;\n}}")
	A_3c;

hotdog
	-label ""
	-annotation "cs 3"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_3c(){\nif(size(`ls-sl`)==0){\n}else{\nif(`keyframe -an keys -q -kc`==0){\nCurveOperation Szero;\n}else{\nackMoveKeys \"up\";\n}\n}\nprint \"S>1[]  selkey AAA\\n\";\n}keyboard_3c;\n")
	A_3d;

hotdog
	-label ""
	-annotation "a 3"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(size(`ls-sl`)==0){}else{\nif(`getPanel -wf`==\"outlinerPanel1\"){\n}else{\nselectKey -tgl -k -t (`currentTime -q`) (`keyframe -q -name`);\n}\n}\nprint \"nowtime ADD selkey\\n\";")
	A_3e;

hotdog
	-label ""
	-annotation "as 3"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//print \"no\";")
	A_3f;

hotdog
	-label ""
	-annotation "ca 3"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_3b(){\nglobal int $channelshu;son;\nif($channelshu!=0){\nstring $attr[]=`channelBox -q -sma mainChannelBox`;\nglobal int $onoff;\nif($onoff==0){$onoff= 1;\nif(size($attr)>0){channelBoxCommand -unmute;}\nelse{channelBoxCommand -muteall;}\n}else if($onoff==1){$onoff=0;\nif(size($attr)>0){channelBoxCommand -mute;}\nelse{channelBoxCommand -unmuteall;}\n}\n}\nprint \"channle/all>muteonoff\\n\";\n}keyboard_3b;")
	A_3g;

hotdog
	-label ""
	-annotation "s 4"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global int $keyjige;son;\nif($keyjige==0){\n//CutTime_abcd \"CutTime_D\";\n}else{\nCurveOperation setkeya_b;\n}\nprint \"set frame qu jianA\";\n//print \"{set time4[mP]}  {set frame qu jianA[gE]}\";")
	A_4a;

hotdog
	-label ""
	-annotation "c 4"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"graphEditor1\"){CurveOperation selectKeyWminus;}\nif(`getPanel -wf`==\"outlinerPanel1\"){CurveOperation selectKeyWplus;}\nelse{}\nprint \"->***<-[gE]   //   <+***+>[oL]\\n\";\n")
	A_4b;

hotdog
	-label ""
	-annotation "a 4"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//if(`getPanel -wf`==\"graphEditor1\"){\nCurveOperation selkeya_b;\nprint \"qu jianA key sel\";\nGraphEditorFrameSelected;\n//}else{CutTime_abcd \"select_4\";\n//PlaybackToggle;}\n//print \"{go time4 play[mP]}  {qu jianA key sel[gE]}\\n\";")
	A_4c;

hotdog
	-label ""
	-annotation "as 4"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//print \"no\";")
	A_4d;

hotdog
	-label ""
	-annotation "ca 4"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`keyframe -an keys -q -kc`==0){ddtangentauto;}else{TangentAuto;}\n//\nglobal proc ddtangentauto(){\nstring $check = `confirmDialog -title \"TangentAuto\"\n                                   -message \"allkey>TangentAuto ?\"\n                                   -button \"Yes\"\n                                   /*--button \"No\"-*/\n                                   -button \"X\"\n                                   -cancelButton \"X\"\n                                   -icon \"information\"`;\nif($check == \"Yes\"){\nTangentAuto;//D\n}else if($check == \"No\"){}else{}\n}")
	A_4e;

hotdog
	-label ""
	-annotation "cs 4"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`keyframe -an keys -q -kc`!=0){\nackMoveKeys down;\n}print \"key VVV\\n\";\n")
	A_4f;

hotdog
	-label ""
	-annotation "4"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//if(`getPanel -wf`==\"outlinerPanel1\"){select $seleobjB[3];}else\n\n\nif(`getPanel -wf`==\"graphEditor1\"){\nif(`keyframe -an keys -q -kc`==0){}else{keyweitiao(-1);}\n}else{DisplayWireframe;}\nprint \"A:B:wireframe[mp] C:keyTangent0.1[gE]\\n\";\n")
	A_4g;

hotdog
	-label ""
	-annotation "s 5"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("CurveOperation setkeyc_d;\nprint \"set frame qu jianB\\n\";")
	A_5a;

hotdog
	-label ""
	-annotation "a 5"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("CurveOperation selkeyc_d;GraphEditorFrameSelected;\nprint \"qu jianB key sel\\n\";")
	A_5b;

hotdog
	-label ""
	-annotation "as 5"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_5a(){\nif (size(`ls-sl`)==0){pose2shelf;\n}else{\nif(`keyframe -an keys -q -kc`==0){\nselectKey;//CurveOperation onekeyselect;\nCurveOperation Key_selobj;\n}else{\nCurveOperation Key_selobj;\n}\n}\n}\n\nif(`getPanel -wf`==\"hyperGraphPanel1\"){\nstring $seell[]=`ls-sl`;\nCurveOperation Key_selobj;\nstring $delsel[]=`ls-sl`;\nselect -cl;select $seell;select -d $delsel;\n}else \n\nif(`getPanel -wf`==\"outlinerPanel1\"){\nstring $selAA[]=`ls-sl`;\n selectKey -clear;selectKey;CurveOperation Key_selobj;\nstring $selBB[]=`ls-sl`;\n select $selAA;select -d $selBB;\n}else{keyboard_5a;}\n\nprint \"selkey>obj//nokey>obj[oL]//selkey<-obj[hG]\\n\";")
	A_5c;

hotdog
	-label ""
	-annotation "c 5"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_5d(){\nif(size(`ls-sl`)!=0){\nif(`keyframe -an keys -q -kc`!=0){\nselekeywork;\n}\n}\nprint \"selkey>win\\n\";\n}keyboard_5d;\n\n/////\nglobal proc selekeywork(){//chongdieKEYsel\nif(`window -ex selekeywork`==true)deleteUI selekeywork;\nwindow -title \"selkeylist\" -h 80 -w 260 selekeywork; \nglobal string $selcurves[];\nglobal int $channelshu;\nglobal float $timelist[];\nglobal int $keyjige;son;\nif($keyjige!=0){\nstring $scrollLayout=`scrollLayout -horizontalScrollBarThickness 16 \n-verticalScrollBarThickness 16`;\nrowColumnLayout -numberOfColumns 1;\nint $xCDK;\nfor ($xCDK=0;$xCDK<$channelshu; $xCDK++){\nstring $selectoo = ($xCDK +\".> \" + $selcurves[$xCDK]+\"__\");\nstring $seleagain = \"selectKey -k -t\"+\" \"+\"$\"+\"timelist[0]\"+\" \"+\"$\"+\"selcurves\"+\"[\"+$xCDK+\"]\";\nbutton -bgc 0.25 0.25 0.25 -l $selectoo -c $seleagain;\nshowWindow selekeywork;\n}\n}\n}")
	A_5d;

hotdog
	-label ""
	-annotation "5"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//if(`getPanel -wf`==\"outlinerPanel1\"){select $seleobjB[4];}else\n\n\nif(`getPanel -wf`==\"graphEditor1\"){\nif(`keyframe -an keys -q -kc`==0){}else{keyweitiao(1);}\n}else{DisplayShaded;}//5\nprint \"A:B:displayshaded[mp] C:keyTangent1.1[gE]\\n\";")
	A_5e;

hotdog
	-label ""
	-annotation "8"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global string $PPPTTT[];\nif(size(`ls-sl`)==0){select $PPPTTT;}else{\n$PPPTTT=`ls-sl`;\n\nif(`getPanel -wf`==\"hyperGraphPanel1\"){\nstring $sellll[]=`ls-sl`;LtW_point;select $sellll;foundconsaki;PickWalkUp;AriSortOutliner;}else\n//if(`getPanel -wf`==\"graphEditor1\"){}else\nif(`getPanel -wf`==\"outlinerPanel1\"){LtL_point;}else\nif(`getPanel -wf`==\"scriptEditorPanel1\"){\nstring $riig[]=`ls-sl`;sonbakeT;foundconsaki;pickWalk -d up;pickWalk -d up;delete;select $riig;\nprint \"scriptEditorPanel1\";\n}else{sonbakeT;}\n}print \"ltw_P[hG]//bakeP[]//ltl_P[oL]//xxx[gE]//bakeP_clear[sE]\\n\";")
	A_8a;

hotdog
	-label ""
	-annotation "^"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(size(`ls-sl`)==0){}else{\ndingtimeB;\n}\n//\nglobal proc dingtimeB(){\nglobal float $jiluselkeys[];\nclear $jiluselkeys;\n$selkey=sort(`keyframe -q -sl`);\nint $p=-1;\nfloat $newaa[];\nfor($i=0;$i<`size($selkey)`;$i++){\nint $t=$i+1;\nif($selkey[$i]!= $selkey[$t]){\n$newaa[0]=$selkey[$i];\n$p++;\n$jiluselkeys[$p]=$newaa[0];\n}\n}\nprint (`keyframe -an keys -q -kc`+\"個key選択|\"+`size($jiluselkeys)`+\"個時間点記録\");\n}\n//\nglobal proc seledingtime(){\nglobal float $jiluselkeys[];\nfor($b in $jiluselkeys){\nselectKey -add -k -t $b `keyframe -q -name`;\n}print \"只在記録的時間点selkey\\n\";\n}")
	A_11a;

hotdog
	-label ""
	-annotation "c ^"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("seledingtime;")
	A_11b;

hotdog
	-label ""
	-annotation "f1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_F1a(){\nif(size(`ls-sl`)==0){//Help;\n\nglobal int $loopfF1view;\nif($loopfF1view==0){$loopfF1view=1;\nsetNamedPanelLayout \"sdw3\";fitPanel -selectedNoChildren;\n}else if($loopfF1view==1){$loopfF1view=0;\nsetNamedPanelLayout \"sdw2\";fitPanel -selectedNoChildren;\n}\n select -r \"*:rig\"; FrameSelectedWithoutChildrenInAllViews; select -cl  ;\n}else{\n\nif(`getPanel -wf`==\"hyperGraphPanel1\"){\nmyswitch2(2);\nprint \"..+<f1.\";\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nmyswitch2(1);\nprint \".f1>+..\";\n}else if(`getPanel -wf`==\"scriptEditorPanel1\"){\nkeywork_f1A;\nprint \".*....|*f1 [sE]\";\n}else{\nif(`keyframe -an keys -q -kc`==0){\nCurveOperation onekeyselect;\nacktooluse(7);\nselectKey -clear;\n}else{\nacktooluse(7);\n}\n}\n}print \"{A:help>sdw2-3 B:C:keypull}{..+<f1.[hG]}{.f1>+..[oL]}{.*....|*f1[sE]}\\n\";\n}keyboard_F1a;\n\n\nglobal proc keywork_f1A(){//遠距離F1\nglobal string $selcurves[];\nglobal int $notime;\nglobal float $FrameA;son;\nfloat $newt=$notime-0.5;\ncopyKey ;\npasteKey -time $newt -float $newt -option merge -copies 1 \n-connect 0 -timeOffset 0 -floatOffset 0 -valueOffset 0;\nselectKey -tgl -k -t $notime $selcurves;\nselectKey -rm -k -t $newt $selcurves;\nacktooluse(7);\nselectKey -k -t $newt $selcurves;\ncutKey -clear;\nselectKey -k -t $FrameA $selcurves;\n}//keywork_f1A;")
	B_F1a;

hotdog
	-label ""
	-annotation "c f1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_F1b(){\nif(size(`ls-sl`)==0){\n}else{\nif(`keyframe -an keys -q -kc`!=0){\n\nglobal int $loopf1b;\nif($loopf1b==0){$loopf1b=1;\nacktooluse(1);\n}else if($loopf1b==1){$loopf1b=0;\nacktooluse(2);\n}\n\n}else{\n}\n}print \".||< & >||.\\n\";\n}keyboard_F1b;")
	B_F1b;

hotdog
	-label ""
	-annotation "a f1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_F1c(){\nif(size(`ls-sl`)==0){}else{\nif(`keyframe -an keys -q -kc`==0){\nselectKey -t \":\";\nif(`getPanel -wf`==\"outlinerPanel1\"){ackPushPull rightsnaptotime;}\nelse if(`getPanel -wf`==\"hyperGraphPanel1\"){threeCP;}\nelse{ackPushPull leftsnaptotime;}\nselectKey -clear ;\n\n}else{\nif(`getPanel -wf`==\"outlinerPanel1\"){ackPushPull rightsnaptotime;}\nelse if(`getPanel -wf`==\"hyperGraphPanel1\"){threeCP;}\nelse{ackPushPull leftsnaptotime;}\n\n}\n\n}print \"threeCP[hG]   ///  |--|@[oL]   ///  @|--|\\n\";\n}keyboard_F1c;\n\n\n\nglobal proc threeCP(){\nint $startFrame = `playbackOptions -q -min`;\nint $endFrame = `playbackOptions -q -max`;\nint $range = $endFrame - $startFrame;\n// ?????????????????????????\nstring $selected[] = `ls -sl`;\nstring $animCurves[] = `keyframe -q -name $selected`;\n// ???????????????\nfor ($curve in $animCurves) {\n    // ???????\n    float $times[] = `keyframe -q -timeChange $curve`;\n    float $values[] = `keyframe -q -valueChange $curve`;\n    // ???????80?100?\n    for ($i = 0; $i < size($times); $i++) {\n        float $newTime = $times[$i] - $range;\n        float $value = $values[$i];\n        setKeyframe -time $newTime -value $value $curve;\n    }\n    // ???????120?140?\n    for ($i = 0; $i < size($times); $i++) {\n        float $newTime = $times[$i] + $range;\n        float $value = $values[$i];\n        setKeyframe -time $newTime -value $value $curve;\n    }\n}\n}")
	B_F1c;

hotdog
	-label ""
	-annotation "ca f1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\nacktooluse(21); \n}else{\nacktooluse(20); \n}\nprint \"|X|  |||  |Y|[oL]\\n\";")
	B_F1d;

hotdog
	-label ""
	-annotation "s f1"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`keyframe -an keys -q -kc`==0){MoveKeylr(0,0);}\nelse{\n\nif(`getPanel -wf`==\"hyperGraphPanel1\"){\nmyswitch(1);selectKey -k -t ($FrameA+\":\"+$FrameB) $selcurves;\nCurveOperation foundpreviouskey;\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nmyswitch(1);selectKey -k -t ($FrameA+\":\"+$FrameB) $selcurves;\nCurveOperation foundnextkey;\n}else{\nmyswitch(1);selectKey -k -t ($FrameA+\":\"+$FrameB) $selcurves;\n}\n\n}\nprint \"{<..+|o-f1-o[hG]}  {|o-f1-o|}  {[o-f1-o|+..>[oL]} // {nokey <| move}\\n\";\n")
	B_F1e;

hotdog
	-label ""
	-annotation "f2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_F2a(){\n if(size(`ls-sl`)==0)\n {//ShowModelingUI;\n setNamedPanelLayout \"sdw5\";fitPanel -selectedNoChildren;\nselect `ls -type mesh`;\nFrameSelectedWithoutChildrenInAllViews;//fitAllPanels -all;\nselect -cl  ;\n }else\n {\n   if(`keyframe -an keys -q -kc`==0)\n   {\n     CurveOperation onekeyselect;\n     acktooluse(8);\n     selectKey -clear;\n   }else\n   {\n     acktooluse(8);\n   }\n }print \"A:ShowModelingUI/cvshowONOFF B:push C:push\\n\";\n}keyboard_F2a;\n")
	B_F2a;

hotdog
	-label ""
	-annotation "c f2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("")
	B_F2b;

hotdog
	-label ""
	-annotation "a f2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("\nif(`getPanel -wf`==\"outlinerPanel1\"){\nif(`keyframe -an keys -q -kc`==0){\nCurveOperation onekeyselect;\nackPushPull swell;\nselectKey -clear;\n}else{\nackPushPull swell;\n}\n\n\n}else{\n\nif(`keyframe -an keys -q -kc`==0){\nCurveOperation onekeyselect;\nackPushPull shrink;\nselectKey -clear;\n}else{\nackPushPull shrink;\n}\n\n}\n\nprint \"key jiejin__x[] /// key yuanli__x[oL]}\\n\";")
	B_F2c;

hotdog
	-label ""
	-annotation "ca f2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("")
	B_F2d;

hotdog
	-label ""
	-annotation "s f2"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`keyframe -an keys -q -kc`!=0){\nmyswitch(2);\nselectKey -k -t ($FrameA+\":\"+$FrameB) $selcurves;\n}else{\nMoveKeylr(0,1);\n}\nprint \"{|o-f2-o|}   //////   {nokey >| move}\\n\";")
	B_F2e;

hotdog
	-label ""
	-annotation "f3"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_F3a(){\nif(size(`ls-sl`)==0){//ShowRiggingUI;\nshowONFF(2);\n}else{\nif(`keyframe -an keys -q -kc`==0){\nCurveOperation onekeyselect;\nacktooluse(9);\nselectKey -clear;\n}else{\nacktooluse(9);\n}\n}print \"ShowRiggingUI>rigCVonoff  //////  push  //////  push\\n\";\n}keyboard_F3a;")
	B_F3a;

hotdog
	-label ""
	-annotation "c f3"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("")
	B_F3b;

hotdog
	-label ""
	-annotation "a f3"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("")
	B_F3c;

hotdog
	-label ""
	-annotation "s f3"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`keyframe -an keys -q -kc`!=0){\nmyswitch(3);\nselectKey -k -t ($FrameA+\":\"+$FrameB) $selcurves;\n}else{\nMoveKeylr(1,0);\n}\nprint \"{|o-f3-o|}   //////   {nokey |< move}\\n\";")
	B_F3e;

hotdog
	-label ""
	-annotation "f4"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_F4a(){\nif(size(`ls-sl`)==0){//ShowAnimationUI;\nshowONFF(0);\n\n}else{\nif(`getPanel -wf`==\"hyperGraphPanel1\"){\nmyswitch2(4);\nprint \"..+<f4.\";\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nmyswitch2(3);\nprint \".f4>+..\";\n}else{\nif(`keyframe -an keys -q -kc`==0){\nCurveOperation onekeyselect;\nacktooluse(10);\nselectKey -clear;\n}else{\nacktooluse(10);\n}\n}\n}\nprint \"{A:ShowAnimationUI>J onfoo B:C:pull}  //////  {..+<f4.[hG]}  //////  {.f4>+..[oL]}\\n\";\n}keyboard_F4a;\n")
	B_F4a;

hotdog
	-label ""
	-annotation "s f4"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`keyframe -an keys -q -kc`==0){MoveKeylr(1,1);}\nelse{\n\nif(`getPanel -wf`==\"hyperGraphPanel1\"){\nmyswitch(4);selectKey -k -t ($FrameA+\":\"+$FrameB) $selcurves;\nCurveOperation foundpreviouskey;\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\nmyswitch(4);selectKey -k -t ($FrameA+\":\"+$FrameB) $selcurves;\nCurveOperation foundnextkey;\n}else{\nmyswitch(4);selectKey -k -t ($FrameA+\":\"+$FrameB) $selcurves;\n}\n\n}\nprint \"{<..+|o-f4-o[hG]}   //////   {|o-f4-o|}   //////   {[o-f4-o|+..>[oL]}   //////   {nokey |> move}\\n\";\n")
	B_F4e;

hotdog
	-label ""
	-annotation "X______↑rig>lot>found TTT  >n"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(size(`ls-sl`)==0){\nselect -r \"*_conSOMaim*\";\npickWalk -d right;foundconsaki;pickWalk -d up;\n}else{\nfoundconsaki;pickWalk -d up;pickWalk -d right;pickWalk -d right;\nfoundconsaki;pickWalk -d up;\n}\n")
	B_F5a;

hotdog
	-label ""
	-annotation "X______↑rig>lot>found VVV  >m"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(size(`ls-sl`)==0){\nselect -r \"*_conSOMaim*\";\npickWalk -d right;pickWalk -d right;foundconsaki;pickWalk -d up;\n}else{\nfoundconsaki;pickWalk -d up;pickWalk -d right;pickWalk -d right;pickWalk -d right;\nfoundconsaki;pickWalk -d up;\n}")
	B_F6a;

hotdog
	-label ""
	-annotation "f7"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`keyframe -an keys -q -kc`==0){\nsunxujiaohuan;\n}else{\n}print \"sunxujiaohuan\\n\";\n")
	B_F7a;

hotdog
	-label ""
	-annotation "a f7"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("zhugejianxuan;")
	B_F7b;

hotdog
	-label ""
	-annotation "c f7_____n+m"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"scriptEditorPanel1\"){\nclearObianT;}else \nif(`getPanel -wf`==\"outlinerPanel1\"){\nselect -r \"*_conSOMaim\";\npickWalk -d left;pickWalk -d down;pickWalk -d right;foundconmubiao;pickWalk -d up;\nstring $selmotoo[]=`ls-sl`;\n}else{\n\nif(size(`ls-sl`)==0){//=asQ\nselect -r \"*_conSOMaim\";pickWalk -d right;foundconsaki;pickWalk -d up;\nstring $selTTT[]=`ls-sl`;\nselect -r \"*_conSOMaim\";pickWalk -d right;pickWalk -d right;foundconsaki;pickWalk -d up;\nstring $selVVV[]=`ls-sl`;\nselect $selTTT $selVVV;\n\n}else{\nstring $fff[]=`ls-sl`;\nfoundconsaki;pickWalk -d up;pickWalk -d right;pickWalk -d right;\nfoundconsaki;pickWalk -d up;\nstring $selTTT[]=`ls-sl`;\n\nselect $fff;\nfoundconsaki;pickWalk -d up;pickWalk -d right;pickWalk -d right;pickWalk -d right;\nfoundconsaki;pickWalk -d up;\nstring $selVVV[]=`ls-sl`;\nselect $selTTT $selVVV;\n}\n}print \"O>Trig  selmubiao_zhaoTTT+PVVoya//nosel_allTTT+PVVoya//mubiao[oL]//bakeO_clear[sE]\\n\";")
	B_F7c;

hotdog
	-label ""
	-annotation "f8"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_F8a(){\nif(`getPanel -wf`==\"hyperGraphPanel1\"){\n//onetimeworkON;\n}else if(`getPanel -wf`==\"outlinerPanel1\"){\n//onetimeworkOFF;\n}else{\ntoggleSelMode;\nprint \"onetimeworkON[hG]X//onetimeworkOFF[oL]X//toggleSelMode\\n\";\n}}keyboard_F8a;")
	B_F8a;

hotdog
	-label ""
	-annotation "c f8"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("onetimeworkOFF;\nprint \"onetimeworkOFF\\n\";")
	B_F8b;

hotdog
	-label ""
	-annotation "a f8"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("onetimeworkON;\nprint \"onetimeworkON\\n\";")
	B_F8c;

hotdog
	-label ""
	-annotation "s f8"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("retimehelperworksss(1,60);\nprint \"nowtime>retimehelper1f\\n\";")
	B_F8d;

hotdog
	-label ""
	-annotation "f9"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\nselect $A $B;\n}else{\nselect $A;\n}\nprint(\"sel A:\"+size(`ls-sl`)+\"   [oL]A+B:\"+size(`ls-sl`)+\"\\n\");")
	B_F9a;

hotdog
	-label ""
	-annotation "c f9"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("select -d $A;\nprint(\"-A  \"+size(`ls-sl`)+\"  (●^●)\\n\");\n")
	B_F9b;

hotdog
	-label ""
	-annotation "a f9"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("QA_pickOrigin;\nprint(\"setA  \"+size(`ls-sl`)+\" (●^●)\\n\");")
	B_F9c;

hotdog
	-label ""
	-annotation "s f9"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"graphEditor1\"){\nselect -add $A;\n}else{\nselect -add $B;\n}\nprint(\"+A:\"+size(`ls-sl`)+\"   [gE]+B:\"+size(`ls-sl`)+\"\\n\");")
	B_F9d;

hotdog
	-label ""
	-annotation "f10"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\nselect $B $A;\n}else{\nselect $B;\n}\nprint(\"sel B:\"+size(`ls-sl`)+\"   [oL]B+A:\"+size(`ls-sl`)+\"\\n\");")
	B_F10a;

hotdog
	-label ""
	-annotation "c f10"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("select -d $B;\nprint(\"-B  \"+size(`ls-sl`)+\"  (●^●)\\n\");")
	B_F10b;

hotdog
	-label ""
	-annotation "a f10"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("QA_pickTarget;\nprint(\"setB  \"+size(`ls-sl`)+\" (●^●)\\n\");")
	B_F10c;

hotdog
	-label ""
	-annotation "f11"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("select -r \"*qinglimenhu\";pickWalk -d up;\n\n//zaixuan;\n//global string $seleobjB[];\n//select $seleobjB;\n")
	B_F11a;

hotdog
	-label ""
	-annotation "c f11"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc referenceeW() {\nif(`window -ex referenceW` == true )deleteUI referenceW;\nwindow -title \"referenceW\" -w 50 -h 100 referenceW;\ncolumnLayout;\nrowLayout -nc 6 -cw2 5 20;\nbutton -h 35 -l \"selA > sel*:A\" -c referencesel;\nbutton -h 35 -l \"moto\" -c \"select -r $motooObjects;\";\nbutton -h 35 -l \"saki\" -c \"select -r $sakiiObjects;\";\nbutton -h 35 -l \"  All  \" -c \"select -r $motooObjects $sakiiObjects;\";\nbutton -h 35 -l \"selA < sel *:A\" -c referenceselfan;\nsetParent ..;\nrowLayout -nc 6 -cw2 5 20;\nbutton -h 35 -l \"duiqi End>go\" -c duiqiXXX;\nbutton -h 35 -l \"duiqi PageDown>go\" -c duiqiY;\nsetParent ..;\ntext -label \"-----------------\";\nshowWindow referenceW;\n}referenceeW;\n\nZaixuanze;\n\nglobal proc referencesel(){\n    global string $motooObjects[];\n    clear($motooObjects); // 前回の記録をクリア\n    global string $sakiiObjects[];\n    clear($sakiiObjects); // 前回の記録をクリア\nstring $seeel[]=`ls-sl`;\n$motooObjects=$seeel;\nselect -cl;\nfor($i = 0;$i<`size($seeel)`;$i++){\nselect -add (\"*:\"+$seeel[$i]);\n}string $seeelnew[]=`ls-sl`;$sakiiObjects=$seeelnew;\n}\n////\nglobal proc duiqiXXX(){//End,PageDownと連携\nglobal string $selAAAB[];\nglobal string $selnew[];\nstring $sellrig[]=`ls-sl`;\nselect $selnew;\ntimeSliderCopyKey;\nselect $selAAAB;\ntimeSliderPasteKey false;\nselect $sellrig;\n}\n////\nglobal proc duiqiY(){//PageDownと連携\nglobal int $sttime;\nglobal int $edtime;son;\nstring $selll[]=`ls-sl`;\nselect $selll[1];\nplaybackOptions -sst $sttime -set $edtime -sv true ;\ntimeSliderCopyKey;\nselect $selll[0];\nplaybackOptions -sst $sttime -set $edtime -sv true ;\ntimeSliderPasteKey false;\nselect $selll;\n}\n////\nglobal proc referenceselfan(){\n    global string $motooObjects[];\n    clear($motooObjects); // 前回の記録をクリア\n    global string $sakiiObjects[];\n    clear($sakiiObjects); // 前回の記録をクリア\nstring $selected[] = `ls -sl`;// -type \"transform\"`;\n$motooObjects=$selected;select -cl;\nfor ($obj in $selected) {\n    string $tokens[];\n    tokenize($obj, \":\", $tokens);\n    string $newName = \"\";// 最初のネームスペースを除いた名前を再構築\n    for ($i = 1; $i < size($tokens); $i++) {\n        $newName += $tokens[$i];\n        if ($i < size($tokens) - 1) {\n            $newName += \":\";\n        }\n    }select -add $newName;\n}string $seeelnew[]=`ls-sl`;$sakiiObjects=$seeelnew;\n}")
	B_F11b;

hotdog
	-label ""
	-annotation "a f11"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("print \"xxxxxx\\n\";")
	B_F11c;

hotdog
	-label ""
	-annotation "ca f11"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_F6a(){\nif(size(`ls-sl`)==0){\nshowONFF(3);\n}else{}\n}//keyboard_F6a;\n\nif(`getPanel -wf`==\"graphEditor1\"){\n//AddInbetween;\n//}else if(`getPanel -wf`==\"outlinerPanel1\"){\n}else{\nshowONFF(3);\n}")
	B_F11d;

hotdog
	-label ""
	-annotation "f12"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("SeleagainB;\n")
	B_F12a;

hotdog
	-label ""
	-annotation "c f12"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc selectItem(){//ctrl+F12\nglobal string $meshess[];\n$meshess=`ls -sl`;\nstring $items[] = `textScrollList -q -si myScrollLis`;//ke yi yin yong 'textlist' \n    select -cl;\n    for ( $item in $items ){\n        string $buffer[];\n        tokenize $item \"-\" $buffer;\n        select -add $buffer[0];\n    }\n}\n//http://area.autodesk.jp/column/tutorial/maya_atoz/listup_number_polygon_4/\nglobal proc Seleagain(){\nglobal string $meshess[];\nif( `window -q -ex win` ){deleteUI win;}\nwindow -t \"ListA_C+F12\" win;\n\n$num =size( `ls -sl `);\nframeLayout -l (\"num:\" + $num );// frameLayoutはウインドウのサイズ変更に自動で対応出来る\ntextScrollList -ams true -sc \"selectItem()\" myScrollLis;// テキストのリストはこれ。-amsは複数選択可かどうか\n$meshess=`ls -sl`;\n for ( $item in $meshess ){\n        textScrollList -e -a $item myScrollLis;// 項目追加\n }\n//button -w 30 -l \"again\"  -c SeleagainB;\nshowWindow win;\n}Seleagain;\n\nglobal proc SeleagainB(){\nglobal string $meshess[];\nselect $meshess;\n}")
	B_F12b;

hotdog
	-label ""
	-annotation "ca f4"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_F5a(){\nif(size(`ls-sl`)==0){\nshowONFF(1);\n}else{}\n}//keyboard_F5a;\n\n\n\n\nif(`getPanel -wf`==\"graphEditor1\"){\n//RemoveInbetween;\n//}else if(`getPanel -wf`==\"outlinerPanel1\"){\n}else{\nshowONFF(1);\n}")
	B_F4d;

hotdog
	-label ""
	-annotation "0"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("//DefaultQualityDisplay  <0\nglobal string $TTTOOO[];\nif(size(`ls-sl`)==0){select $TTTOOO;}else{\n$TTTOOO=`ls-sl`;\n\nif(`getPanel -wf`==\"hyperGraphPanel1\"){LtW_parent;}else\nif(`getPanel -wf`==\"outlinerPanel1\"){LtL_parent;}else\nif(`getPanel -wf`==\"scriptEditorPanel1\"){\nstring $riig[]=`ls-sl`;sonbakeTO;foundconsaki;pickWalk -d up;pickWalk -d up;delete;select $riig;\n\n}else{sonbakeTO;}\n}print \"ltw_TO[hG]//bakeTO[]//ltl_TO[oL]//xxx[gE]//bakeTO_clear[sE]\\n\";\n")
	A_0a;

hotdog
	-label ""
	-annotation "9"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global string $OOOooo[];\nif(size(`ls-sl`)==0){select $OOOooo;}else{\n$OOOooo=`ls-sl`;\n\nif(`getPanel -wf`==\"hyperGraphPanel1\"){LtW_orient;}else\nif(`getPanel -wf`==\"outlinerPanel1\"){LtL_orient;}else\nif(`getPanel -wf`==\"scriptEditorPanel1\"){\nstring $riig[]=`ls-sl`;sonbakeO;foundconsaki;pickWalk -d up;pickWalk -d up;delete;select $riig;\n\n}else{sonbakeO;}\n}print \"ltw_O[hG]//bakeO[mP]//ltl_O[oL]//xxx[gE]//bakeO_clear[sE]\\n\";")
	A_9a;

hotdog
	-label ""
	-annotation "c up"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("addselgo(2);")
	C_up1;

hotdog
	-label ""
	-annotation "c down"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("addselgo(1);")
	C_down1;

hotdog
	-label ""
	-annotation "c left"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("addselgo(4);")
	C_left1;

hotdog
	-label ""
	-annotation "c right"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("addselgo(3);")
	C_right1;

hotdog
	-label ""
	-annotation "c g"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){CreateSet;}\nelse if(`getPanel -wf`==\"hyperGraphPanel1\"){ungroup;}\nelse if(`getPanel -wf`==\"scriptEditorPanel1\"){RecentCommandsWindow;}\nelse{performGroup false;}\nprint \"window[sE]//ungroup[hG]//group[]//set[oL]\\n\";")
	A_g1;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import transferMappedAnims\ntransferMappedAnims.main()")
	bp_TransferMappedAnims;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import ctrlSelector\nctrlSelector.main()")
	bp_CtrlSelector;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import attrRangeSwapper\nattrRangeSwapper.openAttrRangeSwapper()")
	bp_AttrRangeSwapper;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import animMatching\nanimMatching.main()")
	bp_AnimMatching;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import fetch\nfetch.main()")
	bp_Fetch;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import animMirroring\nanimMirroring.main()")
	bp_AnimMirroring;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import objectImporter\nobjectImporter.main()")
	bp_ObjectImporter;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import nHairTool\nnHairTool.main()")
	bp_nHairTool;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import animationToolbox\nanimationToolbox.main()")
	bp_AnimationToolbox;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import transferAnimsFromMain\ntransferAnimsFromMain.main()")
	bp_TransferAnimsFromMain;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import transferMainAnimsPath\ntransferMainAnimsPath.main()")
	bp_TransferMainAnimsPath;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import facialAnimationTrimSetup\nfacialAnimationTrimSetup.main()")
	bp_FacialAnimationTrimSetup;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import keyWholeFrames\nkeyWholeFrames.main()")
	bp_KeyWholeFrames;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import sineWaveCreator\nsineWaveCreator.main()")
	bp_SineWaveCreator;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import animTransferExport\nanimTransferExport.main()")
	bp_BatExport;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import animTransferImport\nanimTransferImport.main()")
	bp_BatImport;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from animBot._api.core import CORE as ANIMBOT_CORE\nANIMBOT_CORE.trigger.animBotMenu_toggle()")
	start_animBot;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint BPE"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.BPE import importBPInstances\nimportBPInstances.importBPModel_SE(False)")
	bp_importBP_SE_InstancesCmd;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint BPE"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.BPE import findCollisionfromBPrender\nfindCollisionfromBPrender.main()")
	bp_importBP_SE_CollisionCmd;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint BPE"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.BPE import importBPInstances\nimportBPInstances.importBPModel_SE(True)")
	bp_importBP_SE_ModelsCmd;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint BPE"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.BPE.importBPInstances as bpi\nbpi.browseImportBPModel(False)")
	bp_importBP_File_InstanceCmd;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint BPE"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.BPE.importBPInstances as bpi\nbpi.browseImportBPModel(True)")
	bp_importBP_File_ModelCmd;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint BPE"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.BPE.importBPInstances as bpi\nbpi.browseImportBPModel(True, bakeTessellation=True)")
	bp_importBP_File_ModelTessCmd;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint BPE"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.BPE import createBPMeshLODs\ncreateBPMeshLODs.main()")
	bp_createBPMeshLODs;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint BPE"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.BPE import syncGroupTransfer\nsyncGroupTransfer.main()")
	bp_syncGroupTransfer;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint BPE"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.BPE import deleteTransferedBPCollision\ndeleteTransferedBPCollision.deleteTransferedBPCollision()")
	bp_deleteBP_Collision;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint BPE"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.BPE import importAllModelsFromScript\nimportAllModelsFromScript.main()")
	bp_importBPModelsFromScript;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Characters"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.characters import hairAlphaCreator\nreload(hairAlphaCreator)\nhairAlphaCreator.main()")
	bp_hairAlphaCreator;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Characters"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.characters import blendshapeLOD\nreload(blendshapeLOD)\nblendshapeLOD.main()")
	bp_blendshapeLOD;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Characters"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.characters import transferBlendshapes\nreload(transferBlendshapes)\ntransferBlendshapes.main()")
	bp_transferBlendshapes;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Characters"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.characters import randomizeBlendshapes\nreload(randomizeBlendshapes)\nrandomizeBlendshapes.main()")
	bp_randomizeBlendshapes;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_scaleRefImporter\nCP11_scaleRefImporter.importScaleRef()")
	bp_CP11_scaleRefImporter;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_EnvSceneInitializer\nCP11_EnvSceneInitializer.EnvSceneInitializer()")
	bp_CP11_EnvSceneInitializer;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_directoryExport\nCP11_directoryExport.main()")
	bp_CP11_directoryExport;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_matchToLevelLayout\nCP11_matchToLevelLayout.matchLevelLayout()")
	bp_CP11_matchToLevelLayout;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_replaceFBXPhongWithBPMat\nCP11_replaceFBXPhongWithBPMat.CP11_replaceFBXPhongwithBPMat()")
	bp_CP11_replaceFBXPhongwithBP;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_convertFbxToMaya\nCP11_convertFbxToMaya.main()")
	bp_CP11_convertFbxToMaya;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_rtgFbx\nCP11_rtgFbx.main()")
	bp_CP11_rtgFbx;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_fixShotOutputData\nCP11_fixShotOutputData.main()")
	bp_CP11_fixShotOutputData;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_compareRootData\nCP11_compareRootData.main()")
	bp_CP11_compareRootData;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import ogMapImporter\nogMapImporter.importBPInstanceAsFBX()")
	bp_ogMapImporter;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_assignCollisionData\nCP11_assignCollisionData.main()")
	bp_CP11_assignCollisionData;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_characterCreatorFunctions as ccFunc\nreload(ccFunc)\nccFunc.main()")
	bp_CP11_characterCreatorFunctions;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_createInstaLodLODs\nCP11_createInstaLodLODs.main()")
	bp_CP11_createInstaLodLODs;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Display"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.viewPort import bp_renderHUD as BP_RHUB \nBP_RHUB.main()")
	bp_RenderHUB;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Display"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.viewPort import bpViewportCameraLight as BP_VCL \nBP_VCL.main()")
	bp_ViewportCameraLight;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Exporters"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.exporters import createModelExportNodes\ncreateModelExportNodes.main()")
	bp_CreateModelExportNodes;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Exporters"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.exporters import modelExporter\nmodelExporter.main()")
	bp_ModelExporter;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Exporters"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.exporters import charExporter\ncharExporter.main()")
	bp_CharExporter;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Exporters"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.exporters import animExporter\nanimExporter.main()")
	bp_AnimExporter;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Exporters"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.exporters import animExporterStandalone\nanimExporterStandalone.main()")
	bp_AnimExporterStandalone;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint File"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.file import sceneAnnotation\nsceneAnnotation.main()")
	bp_SceneAnnotation;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint File"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.file import openMayaFileDir\nopenMayaFileDir.openMayaFileDir()")
	bp_OpenMayaFileDir;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint File"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.file import openProjectDir\nopenProjectDir.openProjectDir()")
	bp_OpenProjectDir;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint File"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BPDEV.APIs.crossDCC import getDCCAPI\nBPAPI = getDCCAPI('maya')\nBPAPI.openP4WFCheckoutGui()")
	bp_PerforceTool;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint File"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.lib.utilities import openMayaFileFromAsset\nopenMayaFileFromAsset()")
	bp_OpenMayaFileFromAsset;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint File"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.file.bpm_projectManager as pm\npm.main()")
	bp_ProjectManager;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint File"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.file.createAssetFolderStructure as afs\nafs.main()")
	bp_CreateAssetFolderStructure;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint FX"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.fx.houdiniFBXTransfer as hft\nhft.main()")
	bp_HoudiniFBXTransfer;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint FX"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.fx.houdiniFBXTransferToolbox as hft\nhft.main()")
	bp_HoudiniFBXTransferToolbox;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint FX"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.fx.makeDestructible as md\nmd.main()")
	bp_makeDestructible;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Help"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.setup.runtimeCmds import helpRuntimeCmds\nhelpRuntimeCmds.displayBpToolsHelp()")
	bp_help;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_uniform_remesh.hda')")
	bp_uniformRemesh;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_boulder_builder.hda')")
	bp_boulderBuilder;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_rope_lashing_generator.hda')")
	bp_ropeLashingGenerator;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_maya_noise.hda')")
	bp_mayaNoise;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_bricks_from_image.hda')")
	bp_bricksFromImage;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_trim_generator.hda')")
	bp_trimGenerator;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_wall_buster.hda')")
	bp_wallBuster;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_maya_boolean.hda')")
	bp_mayaBoolean;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_rebuild_mesh.hda')")
	bp_mayaRebuildMesh;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_generate_collisions.hda')")
	bp_generate_collisions;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_duplicate_along_curve.hda')")
	bp_duplicate_along_curve;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_maya_bullet_sim.hda')")
	bp_maya_bullet_sim;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_maya_path_deform.hda')")
	bp_maya_path_deform;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_blend_with_terrain.hda')")
	bp_blend_with_terrain;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_vines.hda')")
	bp_vine_grower;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_skirt_creator.hda')")
	bp_skirt_creator;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_scatter_on_surface.hda')")
	bp_scatter_on_surface;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_spider_web.hda')")
	bp_spider_web;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_make_destructible.hda')")
	bp_make_destructible;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_mesh_destruction.hda')")
	bp_mesh_destruction;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_ropes_and_chains.hda')")
	bp_ropes_and_chains;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_maya_vellum_sim.hda')")
	bp_maya_vellum_sim;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_scaffold_reconstruction.hda')")
	bp_scaffold_reconstruction;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_plank_generator.hda')")
	bp_plank_generator;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_quick_damage.hda')")
	bp_quick_damage;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_clip_by_surface.hda')")
	bp_clip_by_surface;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_veins.hda')")
	bp_veins;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(None)")
	bp_importHDA;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.materials import assignBpMaterial\nassignBpMaterial.assignBpMaterial()")
	bp_AssignBpMaterial;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.materials import assignBPCheckerboardMat\nassignBPCheckerboardMat.main()")
	bp_AssignBpCheckerboardMat;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.materials import assignMaterialsTool\nassignMaterialsTool.main()")
	bp_AssignMaterialsTool;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.materials import assignBpMaterial\nassignBpMaterial.assignIncludeMaterialsAttrs(preInclude=True)")
	bp_AssignPreIncludeMaterial;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.materials import assignBpMaterial\nassignBpMaterial.clearIncludeMaterialsAttrs(preInclude=True)")
	bp_ClearPreIncludeMaterial;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.materials import assignBpMaterial\nassignBpMaterial.assignIncludeMaterialsAttrs(postInclude=True)")
	bp_AssignPostIncludeMaterial;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.materials import assignBpMaterial\nassignBpMaterial.clearIncludeMaterialsAttrs(postInclude=True)")
	bp_ClearPostIncludeMaterial;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.materials.convertBasicPBRtoMaya as pbr\npbr.main()")
	bp_ConvertBasicPBRtoMaya;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.lib.shader.bpMaterialTools as bpmt\nbpmt.consolidateBpMaterials()")
	bp_ConsolidateBPMaterials;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.materials import bpMaterialBrowser\nbpMaterialBrowser.main()")
	bp_MaterialBrowser;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.lib.shader import selectByMat\nselectByMat.selectByMat()")
	bp_SelectByMat;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.materials import assignDisableTessellateMaterialTool\nassignDisableTessellateMaterialTool.main()")
	bp_AssignDisableTessellationMat;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.materials.convertBpeMaterialsToArnold as bta\nbta.main()")
	bp_ConvertBpeMaterialsToArnold;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.materials.replaceGeoWithCards as rgwc\nrgwc.main()")
	bp_ReplaceGeoWithCards;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.materials.captureRenderTargetToTexture as crt\ncrt.main()")
	bp_captureRenderTargetToTexture;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.materials.relocateFileTextures as rft\nrft.main()")
	bp_relocateFileTextures;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import polyChecker\npolyChecker.main()")
	bp_polyChecker;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import selectEveryOtherEdgeLoop\nselectEveryOtherEdgeLoop.selectEveryOtherEdgeLoop()")
	bp_everyOtherEdgeLoop;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import insertMidLoop\ninsertMidLoop.main()")
	bp_insertMidLoop;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import insertMidLoop\ninsertMidLoop.optionsUI()")
	bp_insertMidLoopOptions;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import mergeEdgeLoops\nmergeEdgeLoops.main()")
	bp_mergeEdgeLoops;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import objectPlacer\nobjectPlacer.main()")
	bp_objectPlacer;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import borderSnapping\nborderSnapping.main()")
	bp_borderMatch;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.modeling.setsFromProjectedGeo as setFromGeoPrj\nsetFromGeoPrj.main()")
	bp_setFromGeoProj;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import averageVertNormals\naverageVertNormals.main()")
	bp_averageVertNormals;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import snapCurveToGeo\nsnapCurveToGeo.main()")
	bp_snapCurveToGeo;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.modeling.meshQCUI as AQCUI\nAQCUI.main()")
	bp_AssetQCCheck;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.modeling.transferAttributes as tnm\ntnm.main()")
	bp_TransferAttributes;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.modeling.randomizer as rdm\nrdm.main()")
	bp_randonmizer;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import createConvexHullFromSelection\ncreateConvexHullFromSelection.createConvexHullFromSelection()")
	bp_createConvexHull;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import transferVertColorToDeformerWeight\ntransferVertColorToDeformerWeight.main()")
	bp_transferVertColorToDeformerWeight;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import selectFacesByAxis\nselectFacesByAxis.main()")
	bp_selectFaceByAxis;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import selectEdgeByFaceAngle\nselectEdgeByFaceAngle.main()")
	bp_selectEdgeByFaceAngle;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import separatePolysByMaterial\nseparatePolysByMaterial.main()")
	bp_separatePolysByMaterial;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import unzeroTranslation\nunzeroTranslation.unzeroTranslation()")
	bp_unzeroTranslation;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import cubeCombiner\ncubeCombiner.combineCube()")
	bp_cubeCombiner;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import instaMeshesQuadify\ninstaMeshesQuadify.main()")
	bp_instaMeshesQuadify;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Modeling"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.modeling import perObjectMergeVertUV\nperObjectMergeVertUV.perObjectMergeVertUV()")
	bp_perObjectMergeVertUV;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import characterCreator\ncharacterCreator.main()")
	bp_CharCreator;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import reorderDefObjs\nreorderDefObjs.main()")
	bp_ReorderDefObjs;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import ctrlsData\nctrlsData.main()")
	bp_CtrlsData;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import characterMapper\ncharacterMapper.main()")
	bp_CharMapper;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import jointOrient\njointOrient.main()")
	bp_JointOrient;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import mirrorJoints\nmirrorJoints.main()")
	bp_MirrorJoints;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import skinWeightsManager\nskinWeightsManager.main()")
	bp_SkinWeightsManager;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import jointMapper\njointMapper.main()")
	bp_JointMapper;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import bakedRigids\nbakedRigids.main()")
	bp_BakedRigids;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import bakeChildren\nbakeChildren.main()")
	bp_BakeChildren;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import insertMultiJnts\ninsertMultiJnts.main()")
	bp_InsertMultiJnts;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import publishCharacter\npublishCharacter.main()")
	bp_PublishCharacter;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import fbxAnimFrames\nfbxAnimFrames.main()")
	bp_FbxAnimFrames;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import retargetTool\nretargetTool.main()")
	bp_RetargetTool;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import mocapFbxData\nmocapFbxData.main()")
	bp_MocapFbxData;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import bakeRotationPelvisToMain\nbakeRotationPelvisToMain.main()")
	bp_BakeRotationToMain;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import ragdollSettings\nragdollSettings.main()")
	bp_RagdollSettings;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import createCinematic\ncreateCinematic.main()")
	bp_CreateCinematic;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import cinematicObjectImporter\ncinematicObjectImporter.main()")
	bp_CineObjImporter;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import riggingToolbox\nriggingToolbox.main()")
	bp_RiggingToolbox;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Utilities"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.utilities import bpm_renamer\nbpm_renamer.main()")
	bp_Renamer;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Utilities"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.utilities import bpm_gatherModelExportGroupData\nbpm_gatherModelExportGroupData.main()")
	bp_GatherModelExportGroupData;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint UVs"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.uv.addUVSets as addUVs\naddUVs.main()")
	bp_addUVSets;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint UVs"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.uvw.uvScaleToPixelDensity import main as BP_UV \nBP_UV.main()")
	bp_UVScaleByPixelDensityUI;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint UVs"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.uv.multiObjectUvRenamer as mouvsr\nmouvsr.main()")
	bp_UVSetRenamer;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint UVs"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.uv.matchUVsByWorldLocation as uvmwp\nuvmwp.matchUVsByWorldLocation()")
	bp_UVMatchByWorldLocation;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint UVs"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.tools.uv.wetUVTool as wetUV\nwetUV.cleanUpUVChannels()")
	bp_wetUV;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Vert Color"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.vertColor import addColorSets\naddColorSets.main()")
	bp_addColorSets;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Vert Color"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("RH_VertexChameleon")
	bp_VertexChameleon;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Vert Color"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.vertColor import paintVertexColorTool_Clamped\npaintVertexColorTool_Clamped.paintVertexColorTool_Clamped()")
	bp_PaintVertexTool;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Vert Color"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("import BP_mPy.lib.mesh.mayaSkinCluster as sch\nsch.skinWeightsToVertexColor(cmds.ls(sl=True))")
	bp_skinClusterToColorSet;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Vert Color"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.vertColor import assignPivotVertColor\nassignPivotVertColor.main()")
	bp_assignPivotVertColor;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Vert Color"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.vertColor import bakeVertAO\nbakeVertAO.main()")
	bp_bakeVertAO;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "User Marking Menus"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if (`popupMenu -exists tempMM`) { deleteUI tempMM; }\npopupMenu -button 1 -ctl true -alt false -sh false -allowOptionBoxes true -parent `findPanelPopupParent` -mm 1 tempMM;\npython \"from BP_mPy.setup.markingMenus import generateMarkingMenu; generateMarkingMenu('animMMenu')\";")
	bp_animMMenu_Press;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "User Marking Menus"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if (`popupMenu -exists tempMM`) { deleteUI tempMM; }")
	bp_animMMenu_Release;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "User Marking Menus"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if (`popupMenu -exists tempMM`) { deleteUI tempMM; }\npopupMenu -button 1 -ctl true -alt false -sh false -allowOptionBoxes true -parent `findPanelPopupParent` -mm 1 tempMM;\npython \"from BP_mPy.setup.markingMenus import generateMarkingMenu; generateMarkingMenu('riggMMenu')\";")
	bp_riggMMenu_Press;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "User Marking Menus"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if (`popupMenu -exists tempMM`) { deleteUI tempMM; }")
	bp_riggMMenu_Release;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_maya_bgeo_exporter.hda')")
	bp_exportBGEO;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Animation"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.animation import controlAimTool\ncontrolAimTool.main()")
	bp_ControlAimTool;

hotdog
	-label ""
	-annotation "c"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("global proc keyboard_Ca(){\nglobal int $loopabcVa;print $loopabcVa;\nif($loopabcVa==0){\n$loopabcVa=1;\nanimCurveEditor -edit -showBufferCurves $loopabcVa graphEditor1GraphEd;//バファカーブ表示onoff\n}else if($loopabcVa==1){\n$loopabcVa=0;\nanimCurveEditor -edit -showBufferCurves $loopabcVa graphEditor1GraphEd;\n}\n}//keyboard_Ca;\n\n/*-\nif(`getPanel -wf`==\"outlinerPanel1\"){\nsetkeyHIK_sel;PreviousFrame;\n}else{\naddkeyHIK_F;\nprint \"HIK 1f< setkey // <prekey setkey[oL]\";\n}\n-*/\n\n////RotateToolWithSnapMarkingMenu;RotateToolWithSnapMarkingMenuPopDown;//E\n")
	A_c3;

hotdog
	-label ""
	-annotation "v"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"outlinerPanel1\"){\npickWalk -d right;\n}else if(`getPanel -wf`==\"hyperGraphPanel1\"){//sel key tongyi A\n\nTongYi;\n\n}else if(`getPanel -wf`==\"scriptEditorPanel1\"){//sel key tongyi B\n\nif(`keyframe -an keys -q -kc`!=0){//1\nglobal string $selcurves[];\nglobal string $mmkey;son;\nfor ($channnnl in $selcurves){//2\nselectKey -k -t $mmkey $channnnl;\nTongYi;\n}//2\nselectKey -k -t $mmkey $selcurves;\n}//1\n\n}else{\n\nif (`keyframe -an keys -q -kc`!=0){\ncopyKey ;\npasteKey -time (`currentTime -q`) -float (`currentTime -q`) -option merge -copies 1 -connect 0 -timeOffset 0 \n-floatOffset 0 -valueOffset 0;\nkeyTangent -e -itt auto -ott auto;\nselectKey -clear ;\n}else{pickWalk -d right;}\n}print \"selkey autoCP,nokey Right/Right[oL],key TongYiA[hG] TongYiB_channnl[sE]\\n\";\n\n//\nglobal proc TongYi(){\nfloat $valueeeee;\n$selcurvesm=`keyframe -q -name`;\n$selkeyallm=sort(`keyframe -q -sl`);\n$FrameB=$selkeyallm[(size($selkeyallm) -1)];\n$keyshuzhi=`keyframe -selected -q -valueChange $selcurvesm`;\nfor($obj in $keyshuzhi){$valueeeee=$obj;}\nkeyframe -animation keys -absolute -valueChange $valueeeee;\n}")
	A_v2;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Characters"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("cmds.loadPlugin('hairStripsGen.py')\ncmds.hairStripsGen()")
	ak_hairStripsGen;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import import_hda\nimport_hda.main(os.getenv('BPE_ARTTOOLS_PATH') + '/houdini/hdas/bp_lump_gen.hda')")
	bp_lump_generator;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Rigging"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.rigging import blendshapeToolbox\nblendshapeToolbox.main()")
	bp_BlendshapeToolbox;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Utilities"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.utilities import combineItemsByPostion\ncombineItemsByPostion.main()")
	bp_combineItemsByPosition;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint BPE"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.BPE import importBPModelsSEwLODs\nimportBPModelsSEwLODs.main()")
	bp_importBP_SE_ModelsLODsCmd;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Houdini"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.houdini import houdiniToolbox\nhoudiniToolbox.main()")
	bp_houdiniToolbox;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint CP11"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.CP11 import CP11_importBlendshapeAttrs\nCP11_importBlendshapeAttrs.main()")
	bp_CP11_importBlendshapeAttrs;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Materials"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.materials import assignDisableGpuCollisionMaterialTool\nassignDisableGpuCollisionMaterialTool.main()")
	bp_AssignDisableGpuCollisionMat;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "Bluepoint Vert Color"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("from BP_mPy.tools.vertColor import removeIllegalColorSets\nremoveIllegalColorSets.main()")
	bp_removeIllegalColorSets;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nfrom mgear.shifter import guide_manager\nimport mgear.rigbits as rigbits\nif isinstance(pm.selected()[0], pm.MeshFace):\n    pm.polyExtrudeFacet(constructionHistory=True,keepFacesTogether=True )\nelse:\n    root = pm.selected()[0]\n    if not pm.attributeQuery(\"comp_type\", node=root, ex=True):\n        rigbits.duplicateSym()\n    else:\n        guide_manager.duplicate(True)\n\n")
	mGear_duplicateSym;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nfrom mgear.shifter import guide_manager\nimport mgear.rigbits as rigbits\nif isinstance(pm.selected()[0], pm.MeshFace):\n    pm.polyExtrudeFacet(constructionHistory=True,keepFacesTogether=True )\nelse:\n    root = pm.selected()[0]\n    if not pm.attributeQuery(\"comp_type\", node=root, ex=True):\n        pm.duplicate()\n    else:\n        guide_manager.duplicate(False)\n\n")
	mGear_duplicate;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport maya.mel as mel\n\ndef frameSelectedCenter():\n    oSel = pm.selected()[0]\n\n    oTra = pm.spaceLocator()\n    oTra.setTransformation(oSel.getMatrix(worldSpace=True))\n    mel.eval(\"fitPanel -selected;\")\n    pm.delete(oTra)\n    pm.select(oSel, r=True)\n\nframeSelectedCenter()\n\n")
	mGear_frameCenter;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nfrom mgear.core import attribute\nattribute.smart_reset()\n\n")
	mGear_resetSRT;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport core.cmds as cmds\nimport maya.mel as mel\ngMainWindow = mel.eval('$temp1=$gMainWindow')\nacti = cmds.window( gMainWindow, q=True, titleBar=True)\nif acti:\n    cmds.window( gMainWindow, e=True, titleBar=False)\nelse:\n    cmds.window( gMainWindow, e=True, titleBar=True)\n\n")
	mGear_maximizeMaya;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nfor obj in pm.selected():\n    if pm.selected()[0].nodeType() == \"transform\":\n\n        if pm.getAttr(obj + \".visibility\"):\n            pm.setAttr(obj + \".visibility\", False)\n        else:\n            pm.setAttr(obj + \".visibility\", True)\n\n")
	mGear_toggleVisibility;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport maya.mel as mel\n\npanel = pm.getPanel(wf=True)\n\nshaded = pm.modelEditor(panel, q=True, wos=True)\nif shaded:\n    pm.modelEditor(panel, e=True, wos=False)\nelse:\n    pm.modelEditor(panel, e=True, wos=True)\n\n")
	mGear_toggleWireframeOnTop;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport maya.mel as mel\n\npanel = pm.getPanel(wf=True)\n\nshaded = pm.modelEditor(panel, q=True, da=True)\nif shaded == \"smoothShaded\":\n    pm.modelEditor(panel, e=True, da='wireframe')\nelse:\n    pm.modelEditor(panel, e=True, da='smoothShaded')\n\n")
	mGear_toggleShadedWireframe;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\n\nif len(pm.selected()) !=2:\n    print \"2 objects must be selected\"\nelse:\n    source, target = pm.selected()\n\n    sWM = source.getMatrix(worldSpace=True)\n    target.setMatrix(sWM, worldSpace=True)\n\n")
	mGear_align2Transforms;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nfrom mgear.shifter import guide_manager\nguide_manager.inspect_settings()\n\n")
	mGear_inspectProperty;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nfrom mgear.shifter import guide_manager\nguide_manager.build_from_selection()\n\n")
	mGear_buildFromSelection;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport mgear.core.pickWalk as pw\n\npw.walkDown(pm.selected())\n\n\n\n")
	mGear_walkTransformChild;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport mgear.core.pickWalk as pw\n\npw.walkUp(pm.selected())\n\n")
	mGear_walkTransformParent;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport mgear.core.pickWalk as pw\n\npw.walkLeft(pm.selected())\n\n")
	mGear_walkTransformLeft;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport mgear.core.pickWalk as pw\n\npw.walkRight(pm.selected())\n\n")
	mGear_walkTransformRight;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport mgear.core.pickWalk as pw\n\npw.walkMirror(pm.selected())\n\n")
	mGear_walkMirror;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\n\npm.viewSet(p=True, fit=True)\n\n")
	mGear_resetCameraPersp;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport mgear.core.pickWalk as pw\n\npw.walkDown(pm.selected(), True)\n\n\n\n")
	mGear_walkTransformChildAdd;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport mgear.core.pickWalk as pw\n\npw.walkUp(pm.selected(), True)\n\n")
	mGear_walkTransformParentAdd;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport mgear.core.pickWalk as pw\n\npw.walkLeft(pm.selected(), True)\n\n")
	mGear_walkTransformLeftAdd;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport mgear.core.pickWalk as pw\n\npw.walkRight(pm.selected(), True)\n\n")
	mGear_walkTransformRightAdd;

hotdog
	-label ""
	-annotation ""
	-longAnnotation ""
	-category "mGear"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-mingling("\nimport pymel.core as pm\nimport mgear.core.pickWalk as pw\n\npw.walkMirror(pm.selected(), True)\n\n")
	mGear_walkMirrorAdd;

hotdog
	-label ""
	-annotation "jia"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"graphEditor1\"){\nif(`keyframe -an keys -q -kc`==0){}else{\nscalekey(1.02);\n}\n}else{\ndR_increaseManipSize ;\n}")
	D_jia;

hotdog
	-label ""
	-annotation "jian"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`getPanel -wf`==\"graphEditor1\"){\nif(`keyframe -an keys -q -kc`==0){}else{\nscalekey(0.98);\n}\n}else{\ndR_decreaseManipSize;\n}")
	D_jian;

hotdog
	-label ""
	-annotation "Make instancers for bounding boxes visible"
	-longAnnotation ""
	-category "Custom Scripts.MapInstancer"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`window -q -ex \"BakeHDAwin_20190805\"` || `window -q -ex \"takToggleLOD_UI_USD\"`) InstancerBB_DispOnOff(true);")
	VisibleMapInstancer_rtc;

hotdog
	-label ""
	-annotation "Make instancers for bounding boxes hidden"
	-longAnnotation ""
	-category "Custom Scripts.MapInstancer"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-mingling("if(`window -q -ex \"BakeHDAwin_20190805\"` || `window -q -ex \"takToggleLOD_UI_USD\"`) InstancerBB_DispOnOff(false);")
	HideMapInstancer_rtc;
